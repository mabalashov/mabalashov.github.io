{"componentChunkName":"component---src-templates-index-template-js","path":"/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"html":"<h3 id=\"научимся-мониторить-критичные-метрики-сайта-при-помощи-datadog-и-отправлять-нотификации-в-slack\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%83%D1%87%D0%B8%D0%BC%D1%81%D1%8F-%D0%BC%D0%BE%D0%BD%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D1%82%D1%8C-%D0%BA%D1%80%D0%B8%D1%82%D0%B8%D1%87%D0%BD%D1%8B%D0%B5-%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B8-%D1%81%D0%B0%D0%B9%D1%82%D0%B0-%D0%BF%D1%80%D0%B8-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D0%B8-datadog-%D0%B8-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D1%8F%D1%82%D1%8C-%D0%BD%D0%BE%D1%82%D0%B8%D1%84%D0%B8%D0%BA%D0%B0%D1%86%D0%B8%D0%B8-%D0%B2-slack\" aria-label=\"научимся мониторить критичные метрики сайта при помощи datadog и отправлять нотификации в slack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Научимся мониторить критичные метрики сайта при помощи Datadog и отправлять нотификации в Slack</h3>\n<hr>\n<p>Серия статей</p>\n<ol>\n<li><a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog</a></li>\n<li><a href=\"/posts/connect-datadog-apm-to-docker-swarm\">Настраиваем Datadog APM в сети Docker Swarm</a></li>\n<li><a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></li>\n<li><strong>Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</strong></li>\n</ol>\n<p>В предыдущих статьях мы начали собирать метрики php-fpm и nginx в Datadog.\nСоздадим Datadog Monitor и будем отправлять нотификации в Slack если что-то пошло не так</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/fire-alarm.jpg\" alt=\"Fire Alarm\" title=\"Fire Alarm\"></p>\n<h1 id=\"mониторинг-nginx\" style=\"position:relative;\"><a href=\"#m%D0%BE%D0%BD%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%BD%D0%B3-nginx\" aria-label=\"mониторинг nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Mониторинг nginx</h1>\n<p>Для примера будем мониторить количество одновременных подключений у nginx. </p>\n<p><a href=\"https://www.scalyr.com/blog/how-to-monitor-nginx-the-essential-guide\">Рекомендуется</a> отправлять нотификации в том\nслучае, если количество подключений больше 70% от максимального возможного (\n<a href=\"http://nginx.org/en/docs/ngx_core_module.html#worker_connections\">worker_connections</a> *\n<a href=\"http://nginx.org/en/docs/ngx_core_module.html#worker_processes\">worker_processes</a> для одного nginx-сервера ).</p>\n<p>Допустим, у нас установленые значения по умолчанию и в наличии один контейнер с nginx. Тогда максимальное количество\nвозможных одновременных соединений будет 512 * 1 * 1 = 512 (достаточно грубый расчёт).\nВ таком случае нотификации стоит отправлять на значении ±360 соединений.</p>\n<h1 id=\"настройка-интеграции-slack-и-datadog\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D0%B8-slack-%D0%B8-datadog\" aria-label=\"настройка интеграции slack и datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка интеграции Slack и Datadog</h1>\n<p>Чтобы научить datadog отправлять нотификации в slack, необходимо установить интеграцию со стороны datadog и приложение\nсо стороны slack.</p>\n<h2 id=\"установка-приложения-в-slack\" style=\"position:relative;\"><a href=\"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B2-slack\" aria-label=\"установка приложения в slack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Установка приложения в Slack</h2>\n<h3 id=\"установка\" style=\"position:relative;\"><a href=\"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0\" aria-label=\"установка permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Установка</h3>\n<p>Перейдём в Slack’е в настройку приложений</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/slack-apps.png\" alt=\"Slack applications\" title=\"Slack applications\"></p>\n<p>Далее перейдём по Browse App Directory. Нас перебросит в каталог приложений для слака. Найдём datadog и установим его:</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/slack-datadog-app.png\" alt=\"Slack Datadog Application\" title=\"Slack Datadog Application\"></p>\n<h3 id=\"webhook-url\" style=\"position:relative;\"><a href=\"#webhook-url\" aria-label=\"webhook url permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Webhook URL</h3>\n<p>Простейший способ отправить сообщение в Slack — использовать <a href=\"https://api.slack.com/messaging/webhooks\">Webhook</a>,\nсформированный определенным образом URL. Нам необходимо получить его для настройки интеграции.</p>\n<p>Во вкладке Settings приложения необходимо добавить Configuration, в котором сгенерируем Webhook URL.</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/slack-datadog-app-config.png\" alt=\"Slack Datadog Application Config\" title=\"Slack Datadog Application Config\"></p>\n<h3 id=\"канал\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%B0%D0%BD%D0%B0%D0%BB\" aria-label=\"канал permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Канал</h3>\n<p>Настройка Slack закончена, осталось создать канал, в который будут попадать нотификации из Datadog’а.\nСоздадим любой канал, для примера, я назову его <code>#datadog-notifications</code>. </p>\n<h2 id=\"настройка-интеграции-datadog\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D0%B8-datadog\" aria-label=\"настройка интеграции datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка интеграции Datadog</h2>\n<p>Необходимо установить и включить интеграцию Datadog с Slack. Сделаем всё также, как делали ранее.</p>\n<p>В конфигурации интеграции необходимо создать новый аккаунт и указать Webhook URL, который мы получили на предыдущем шаге.\nТакже необходимо указать канал, в который мы будем слать нотификации — укажем имя канала, созданный ранее <code>#datadog-notifications</code>.</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/datadog-slack-intergration.png\" alt=\"Datadog Slack Integration\" title=\"Datadog Slack Integration\"></p>\n<h1 id=\"настройка-datadog-monitor\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-datadog-monitor\" aria-label=\"настройка datadog monitor permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка Datadog Monitor</h1>\n<p>Теперь всё готово, чтобы создать монитор и настроить его на отправку нотификаций с Slack</p>\n<p>Создадим monitor: Datadog > Monitors > Manage Monitors > Create Monitor. Нас интересует тип Metric </p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/datadog-create-monitor.png\" alt=\"Datadog Create Monitor\" title=\"Datadog Create Monitor\"></p>\n<p>Далее установим значения:</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/datadog-monitor-config.png\" alt=\"Datadog Monitor Configuration\" title=\"Datadog Monitor Configuration\"></p>\n<h3 id=\"пройдёмся-по-настройкам-monitorа\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B9%D0%B4%D1%91%D0%BC%D1%81%D1%8F-%D0%BF%D0%BE-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0%D0%BC-monitor%D0%B0\" aria-label=\"пройдёмся по настройкам monitorа permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Пройдёмся по настройкам Monitor’а:</h3>\n<h4 id=\"choose-the-detection-method\" style=\"position:relative;\"><a href=\"#choose-the-detection-method\" aria-label=\"choose the detection method permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Choose the detection method:</h4>\n<p>В каком случае отправлять нотификацию. Укажем <code>Threshold Alert</code> — отправлять при превышении лимита</p>\n<h4 id=\"define-the-metric\" style=\"position:relative;\"><a href=\"#define-the-metric\" aria-label=\"define the metric permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Define the metric:</h4>\n<p>Какую метрику использовать </p>\n<pre><code>Metric `nginx.net.connections` \nfrom {найдём здесь ваш сервер}\n</code></pre>\n<h4 id=\"set-alert-conditions\" style=\"position:relative;\"><a href=\"#set-alert-conditions\" aria-label=\"set alert conditions permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Set alert conditions:</h4>\n<p>Здесь можно поиграться с настройками, но укажем основное: </p>\n<pre><code>Alert threshold > 450\nWarning threshold > 360\n</code></pre>\n<h4 id=\"say-whats-happening\" style=\"position:relative;\"><a href=\"#say-whats-happening\" aria-label=\"say whats happening permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Say what’s happening:</h4>\n<p>Здесь нам необходимо задать шаблон для нотификаций.\nОпишем максимально подробно случившуюся проблему.</p>\n<p>В шаблоне можно использовать подстановку переменных и что-то вроде условных операторов.\nНапример, если шаблон выглядит вот так: </p>\n<pre><code>{{#is_alert}}Alert{{/is_alert}}\n</code></pre>\n<p>, то сообщение Alert мы увидим только в случае, если произошло событие уровня Alert.</p>\n<p>Более подробно про возможности можно прочитать нажав ссылку <code>Use message template variables</code>:</p>\n<p><img src=\"/media/2020-08-29-datadog-monitor-slack-notifications/datadog-notifications-template-vars.png\" alt=\"Datadog Notifications Template Variables\" title=\"Datadog Notifications Template Variables\"></p>\n<p>В тексте сообщения необходимо упомянуть название канала Slack, в который мы хотим отправить сообщение с префиксом <code>@slack</code>.</p>\n<p>То есть, в нашем случае, сообщение должно содержать такой токен:</p>\n<pre><code>@slack-datadog-notifications\n</code></pre>\n<h4 id=\"проверка\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%BA%D0%B0\" aria-label=\"проверка permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Проверка:</h4>\n<p>Перед сохранением можно проверить доставку сообщения в Slack при помощи <code>Test Notification</code>.\nЕсли тестовое сообщение доставлено — сохраняем монитор и ждём сообщений в канале. </p>\n<hr>\n<p>Предыдущая статья <a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Мониторим состояние php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></p>\n<hr>\n<h1 id=\"интересные-статьи\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8\" aria-label=\"интересные статьи permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Интересные статьи</h1>\n<p><a href=\"https://www.scalyr.com/blog/how-to-monitor-nginx-the-essential-guide\">MONITORING NGINX: THE ESSENTIAL GUIDE</a></p>","fields":{"slug":"/posts/datadog-monitor-slack-notifications","categorySlug":"/category/recipes","tagSlugs":["/tag/datadog","/tag/devops","/tag/slack","/tag/nginx"]},"frontmatter":{"title":"Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем","date":"2020-08-29T22:35:00.000Z","tags":["datadog","devops","slack","nginx"],"category":"recipes","description":"Научимся мониторить критичные метрики сайта при помощи Datadog и отправлять нотификации в Slack ","priority":0}}},{"node":{"html":"<h3 id=\"научимся-собирать-метрики-php-fpm-и-nginx-на-основе-status-page-при-помощи-datadog-в-сети-docker-swarm\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%83%D1%87%D0%B8%D0%BC%D1%81%D1%8F-%D1%81%D0%BE%D0%B1%D0%B8%D1%80%D0%B0%D1%82%D1%8C-%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B8-php-fpm-%D0%B8-nginx-%D0%BD%D0%B0-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%B5-status-page-%D0%BF%D1%80%D0%B8-%D0%BF%D0%BE%D0%BC%D0%BE%D1%89%D0%B8-datadog-%D0%B2-%D1%81%D0%B5%D1%82%D0%B8-docker-swarm\" aria-label=\"научимся собирать метрики php fpm и nginx на основе status page при помощи datadog в сети docker swarm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Научимся собирать метрики php-fpm и nginx, на основе status page при помощи Datadog в сети Docker Swarm</h3>\n<hr>\n<p>Серия статей</p>\n<ol>\n<li><a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog</a></li>\n<li><a href=\"/posts/connect-datadog-apm-to-docker-swarm\">Настраиваем Datadog APM в сети Docker Swarm</a></li>\n<li><strong>Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm</strong></li>\n<li><a href=\"/posts/datadog-monitor-slack-notifications\">Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</a></li>\n</ol>\n<p>Кроме APM при помощи datadog мы можем собирать метрики: периодически опрашивать состояние заданных сервисов.</p>\n<p>Это очень полезный инструмент для мониторинга состояния ресурса, который позволяет снизить время реакции команды\nпри различных отклонениях в работе сервиса.</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/heartbeat.jpg\" alt=\"Heartbeat\" title=\"Heartbeat\"></p>\n<h1 id=\"настройка-интеграции-php-fpm\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D0%B8-php-fpm\" aria-label=\"настройка интеграции php fpm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка интеграции php-fpm</h1>\n<p>Для получения метрик php-fpm datadog’у необходим доступ к\nphp-fpm <a href=\"https://www.tecmint.com/enable-monitor-php-fpm-status-in-nginx/\">status page</a>.</p>\n<p>Нам необходимо настроить php-fpm и nginx так, чтобы можно было получить эту страницу <em>только</em> из нашей служебной сети и\nуказать путь к ней datadog’у. Далее datadog будет периодически получать состояние с этой страницы.</p>\n<h2 id=\"интеграция-datadog\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F-datadog\" aria-label=\"интеграция datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Интеграция Datadog</h2>\n<p>В первую очередь зайдём в Datadog > Integrations, введем в поиске php-fpm и установим интеграцию.\nДолжно выглядеть примерно так:</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/datadog-php-fpm-integration.png\" alt=\"Docker php-fpm Integration\" title=\"Docker php-fpm Integration\"></p>\n<p>Во вкладке <code>Configuration</code> можно найти краткое описание процесса настройки. </p>\n<h2 id=\"настройка-контейнеров\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2\" aria-label=\"настройка контейнеров permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка контейнеров</h2>\n<h3 id=\"php-fpm\" style=\"position:relative;\"><a href=\"#php-fpm\" aria-label=\"php fpm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>php-fpm</h3>\n<p>Чтобы php-fpm отдавал служебные страницы о состоянии, необходимо указать соответствующие значения\nв <a href=\"https://www.php.net/manual/ru/install.fpm.configuration.php\">файле конфигурации</a></p>\n<h4 id=\"копирование-файла-конфигурации-php-fpm-в-docker-image\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%BE%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D1%84%D0%B0%D0%B9%D0%BB%D0%B0-%D0%BA%D0%BE%D0%BD%D1%84%D0%B8%D0%B3%D1%83%D1%80%D0%B0%D1%86%D0%B8%D0%B8-php-fpm-%D0%B2-docker-image\" aria-label=\"копирование файла конфигурации php fpm в docker image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Копирование файла конфигурации php-fpm в docker image</h4>\n<p>Настройки лежат в файле <code>php-fpm.conf</code>.\nНеобходимо пробросить этот файл в образ докера, если вы этого еще не сделали.\nДля этого создадим пустой файл <code>php-fpm.conf</code> и пропишем в <em>dockerfile</em> чтобы при сборке этот файл использовался в образе:</p>\n<pre><code class=\"language-dockerfile\">COPY ./php-fpm.conf /usr/local/etc/php-fpm.d/php-fpm.conf\n</code></pre>\n<p>Корректная директория внутри образа для этого файла варьируется от ОС и настроек системы.</p>\n<h4 id=\"активация-status-page-для-php-fpm\" style=\"position:relative;\"><a href=\"#%D0%B0%D0%BA%D1%82%D0%B8%D0%B2%D0%B0%D1%86%D0%B8%D1%8F-status-page-%D0%B4%D0%BB%D1%8F-php-fpm\" aria-label=\"активация status page для php fpm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Активация status page для php-fpm</h4>\n<p>Чтобы php-fpm отдавал ping page и status page, необходимо указать следующие значения в файле <code>php-fpm.conf</code>:</p>\n<pre><code class=\"language-ini\">ping.path=/ping\npm.status_path=/status\n</code></pre>\n<h3 id=\"nginx\" style=\"position:relative;\"><a href=\"#nginx\" aria-label=\"nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx</h3>\n<p>Теперь нам необходимо научить nginx отдавать status и ping pages, которые мы настроили для php-fpm на предыдущем шаге</p>\n<p>Пропишем следующую секцию в настройках nginx:</p>\n<pre><code>server {\n    listen 81;\n    server_name &#x3C;DOCKER_SERVICE_NAME>;\n\n    access_log off;\n    \n    location ~ ^/(status|ping)$ {\n        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;\n        fastcgi_index index.php;\n        include fastcgi_params;\n        fastcgi_pass &#x3C;FASTCGI_PASS>;\n    }\n}\n</code></pre>\n<p>Где нужно указать:</p>\n<ul>\n<li><code>DOCKER_SERVICE_NAME</code> — имя вашего <a href=\"/posts/create-docker-network-for-datadog#%D1%80%D0%B5%D0%B7%D0%BE%D0%BB%D0%B2%D0%B8%D0%BD%D0%B3-%D0%B2%D0%BD%D1%83%D1%82%D1%80%D0%B8-%D1%81%D0%B5%D1%82%D0%B8\">docker сервиса</a> (можно посмотреть в docker-compose.yaml или docker service ls)</li>\n<li><code>FASTCGI_PASS</code> — как вы обращаетесь <a href=\"http://nginx.org/ru/docs/http/ngx_http_fastcgi_module.html#fastcgi_pass\">к php-fpm</a></li>\n</ul>\n<p>Я указал, чтобы nginx обрабатывал запросы по 81 порту, <a href=\"http://nginx.org/ru/docs/http/request_processing.html\">если мы обращаемся к нему</a> по SERVICE_NAME.\nЕсли 81 порт у вас занят — можно указать любой другой. </p>\n<p>При подобном обращении мы будем уверены, что получить доступ к служебным страницам php-fpm (status / ping) можно\nтолько из внутренней docker сети, которую мы создали в\n<a href=\"/posts/create-docker-network-for-datadog\">предыдущих статьях</a></p>\n<h3 id=\"сети\" style=\"position:relative;\"><a href=\"#%D1%81%D0%B5%D1%82%D0%B8\" aria-label=\"сети permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Сети</h3>\n<p>Убедимся, что контейнеры с <em>nginx</em>, <em>php-fpm</em> и <em>datadog</em> <a href=\"/posts/connect-datadog-apm-to-docker-swarm#configuration\">подключены к служебной сети</a>.\nДля этого стоит проверить, чтобы в списке <em>networks</em> была указана сеть <code>datadog-agent</code> (либо любая другая, которую вы\nиспользуете для внутренней коммуникации между сервисами):</p>\n<pre><code class=\"language-yaml\">services:\n...\n  service_name:\n    networks:\n      ...\n      - datadog-agent\n    ...\n</code></pre>\n<h2 id=\"проверим\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%B8%D0%BC\" aria-label=\"проверим permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Проверим</h2>\n<p>После того, как мы пересоберем и развернем контейнеры, можно проверить вручную, что всё работает так, как мы и хотели.\nДля этого зайдем в какой-нибудь контейнер, находящийся в одной docker-сети с контейнером php-fpm и попробуем обратиться\nк служебным страницам.\nЕсли мы руководствовались предыдущими статьями этой серии, то у вас должен быть настроен контейнер <code>agent</code> в котором\nнаходится datadog-agent.\nПредположим, что имя сервиса, в котором у вас развернут nginx является <code>web-server</code>, тогда команда будет выглядеть так:</p>\n<pre><code class=\"language-bash\">docker exec -it $(docker ps -q --filter \"name=agent\") curl web-server:81/status\n</code></pre>\n<p>в результате получим статус php-fpm. Будет выглядеть примерно так:</p>\n<pre><code>pool:                 www\nprocess manager:      dynamic\nstart time:           29/Aug/2020:12:00:00 +0300\nstart since:          2284\naccepted conn:        220\nlisten queue:         0\nmax listen queue:     0\nlisten queue len:     128\nidle processes:       5\nactive processes:     1\ntotal processes:      6\nmax active processes: 2\nmax children reached: 0\nslow requests:        0\n</code></pre>\n<p>Информацию о данных метриках можно посмотреть например, <a href=\"https://www.malasuk.com/linux/php-fpm-status-page/\">здесь</a>.</p>\n<h2 id=\"настройка-datadog-agent\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-datadog-agent\" aria-label=\"настройка datadog agent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка datadog-agent</h2>\n<p>Приведём описание datadog-agent’а в <code>docker-compose.yaml</code> файле к подобному виду:</p>\n<pre><code>  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n      - DD_LOGS_ENABLED=true\n      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n    labels:\n      com.datadoghq.ad.check_names: '[\"php_fpm\"]'\n      com.datadoghq.ad.init_configs: '[{}]'\n      com.datadoghq.ad.instances: '[{\"status_url\":\"http://${SERVICE_NAME}:81/status\", \"ping_url\":\"http://${SERVICE_NAME}:81/ping\", \"use_fastcgi\": false, \"ping_reply\": \"pong\"}]'\n</code></pre>\n<p>Необходимо указать <code>${SERVICE_NAME}</code> — имя сервиса, в котором у нас развёрнут nginx. По этому пути datadog будет ходить\nза обновлением метрик, поэтому из контейнера <code>agent</code> по этим путям должен быть доступны наши служебные страницы.</p>\n<p>Также обратите внимание на 81 порт — если вы указали другой на предыдущем шаге, укажите здесь соответствующее значение.  </p>\n<p>Здесь мы добавили описание сервиса <code>php_fpm</code> в разделе <em>labels</em>.\nВ экосистеме datadog это называется <a href=\"https://docs.datadoghq.com/agent/docker/integrations/?tab=docker\">Integrations Autodiscovery</a>.</p>\n<h2 id=\"метрики\" style=\"position:relative;\"><a href=\"#%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B8\" aria-label=\"метрики permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Метрики</h2>\n<p>Пересоберём и развернём наши контейнеры.</p>\n<p>Посмотрим доступные метрики. Перейдём в Datadog > Metrics > Explorer и начнём вводить <code>php_fpm</code>.\nМы должны увидеть что-то подобное:</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/datadog-php-fpm-metrics.png\" alt=\"Docker php-fpm Metrics\" title=\"Docker php-fpm Metrics\"></p>\n<p>Их краткое описание можно найти на странице с интеграцией php-fpm:</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/datadog-php-fpm-available-metrics.png\" alt=\"Docker php-fpm Available Metrics\" title=\"Docker php-fpm Available Metrics\"></p>\n<p>Если метрики появились, значит мы всё сделали правильно: docker-agent успешно собрал их из служебных страниц и отправил на сервер.</p>\n<h1 id=\"настройка-интеграции-nginx\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D0%B8-nginx\" aria-label=\"настройка интеграции nginx permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка интеграции nginx</h1>\n<p>Метрики nginx собираются при помощи модуля <a href=\"http://nginx.org/ru/docs/http/ngx_http_stub_status_module.html\"><code>http_stub_status_module</code></a>.</p>\n<p>В основных docker-образах nginx он уже присутствует поэтому дополнительных действий предпринимать не нужно.</p>\n<p>Интеграция nginx похожа на интеграцию php-fpm поэтому часть деталей опущу, чтобы не повторяться.</p>\n<h2 id=\"интеграция-datadog-1\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D0%B3%D1%80%D0%B0%D1%86%D0%B8%D1%8F-datadog-1\" aria-label=\"интеграция datadog 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Интеграция Datadog</h2>\n<p>Убедимся, что интеграция nginx включена в datadog:</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/datadog-nginx-integration.png\" alt=\"Datadog nginx Integration\" title=\"Datadog nginx Integration\"></p>\n<h2 id=\"настройка-контейнеров-1\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-%D0%BA%D0%BE%D0%BD%D1%82%D0%B5%D0%B9%D0%BD%D0%B5%D1%80%D0%BE%D0%B2-1\" aria-label=\"настройка контейнеров 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка контейнеров</h2>\n<h3 id=\"nginx-1\" style=\"position:relative;\"><a href=\"#nginx-1\" aria-label=\"nginx 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>nginx</h3>\n<p>Пропишем следующую секцию в настройках nginx, чтобы попросить его отдавать информацию о статусе по определенному endpoint’у:</p>\n<pre><code>server {\n    listen 82;\n    server_name &#x3C;DOCKER_SERVICE_NAME>;\n\n    access_log off;\n\n    location /nginx_status {\n        stub_status;\n        server_tokens on;\n    } \n}\n</code></pre>\n<p>Пример отдаваемой на странице информации:</p>\n<pre><code>Active connections: 291 \nserver accepts handled requests\n 16630948 16630948 31070465 \nReading: 6 Writing: 179 Waiting: 106 \n</code></pre>\n<h2 id=\"настройка-datadog-agent-1\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-datadog-agent-1\" aria-label=\"настройка datadog agent 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка datadog-agent</h2>\n<p>В настройках интеграции datadog необходимо указать </p>\n<pre><code class=\"language-yaml\">    com.datadoghq.ad.check_names: '[\"php_fpm\", \"nginx\"]'\n    com.datadoghq.ad.init_configs: '[{}, {}]'\n    com.datadoghq.ad.instances: '[{\"nginx_status_url\": \"http://${SERVICE_NAME}:82/nginx_status/\"}]'\n</code></pre>\n<p>Чтобы указать, откуда брать метрики для nginx.\nВ итоге, секция datadog-agent, вместе с предыдущими настройками, должна выглядеть примерно так:</p>\n<pre><code class=\"language-yaml\">  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n      - DD_LOGS_ENABLED=true\n      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n    labels:\n      com.datadoghq.ad.check_names: '[\"php_fpm\", \"nginx\"]'\n      com.datadoghq.ad.init_configs: '[{}, {}]'\n      com.datadoghq.ad.instances: '[{\"status_url\":\"http://${SERVICE_NAME}:81/status\", \"ping_url\":\"http://${SERVICE_NAME}:81/ping\", \"use_fastcgi\": false, \"ping_reply\": \"pong\"}, {\"nginx_status_url\": \"http://${SERVICE_NAME}:82/nginx_status/\"}]'\n</code></pre>\n<h2 id=\"метрики-1\" style=\"position:relative;\"><a href=\"#%D0%BC%D0%B5%D1%82%D1%80%D0%B8%D0%BA%D0%B8-1\" aria-label=\"метрики 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Метрики</h2>\n<p>После пересборки контейнеров, в datadog мы должны увидеть такие доступные метрики для nginx:</p>\n<p><img src=\"/media/2020-08-29-docker-swarm-php-fpm-nginx-metrics/datadog-nginx-metrics.png\" alt=\"Datadog nginx Metrics\" title=\"Datadog nginx Metrics\"></p>\n<hr>\n<p>Предыдущая статья <a href=\"/posts/connect-datadog-apm-to-docker-swarm\">Настраиваем Datadog APM в сети Docker Swarm</a></p>\n<p>Следующая статья <a href=\"/posts/datadog-monitor-slack-notifications\">Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</a></p>","fields":{"slug":"/posts/docker-swarm-php-fpm-nginx-metrics","categorySlug":"/category/recipes","tagSlugs":["/tag/datadog","/tag/devops","/tag/ubuntu","/tag/php","/tag/php-fpm","/tag/nginx","/tag/infrastructure","/tag/docker","/tag/docker swarm"]},"frontmatter":{"title":"Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm","date":"2020-08-29T21:35:00.000Z","tags":["datadog","devops","ubuntu","php","php-fpm","nginx","infrastructure","docker","docker swarm"],"category":"recipes","description":"Научимся собирать метрики php-fpm и nginx, на основе status page при помощи Datadog в сети Docker Swarm ","priority":0}}},{"node":{"html":"<h3 id=\"рассмотрим-создание-простого-сайта-визитки-и-блога-без-навыков-программирования-и-научимся-разворачивать-на-бесплатном-хостинге-статических-сайтов\" style=\"position:relative;\"><a href=\"#%D1%80%D0%B0%D1%81%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B8%D0%BC-%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%BE%D1%81%D1%82%D0%BE%D0%B3%D0%BE-%D1%81%D0%B0%D0%B9%D1%82%D0%B0-%D0%B2%D0%B8%D0%B7%D0%B8%D1%82%D0%BA%D0%B8-%D0%B8-%D0%B1%D0%BB%D0%BE%D0%B3%D0%B0-%D0%B1%D0%B5%D0%B7-%D0%BD%D0%B0%D0%B2%D1%8B%D0%BA%D0%BE%D0%B2-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%B8%D0%BC%D1%81%D1%8F-%D1%80%D0%B0%D0%B7%D0%B2%D0%BE%D1%80%D0%B0%D1%87%D0%B8%D0%B2%D0%B0%D1%82%D1%8C-%D0%BD%D0%B0-%D0%B1%D0%B5%D1%81%D0%BF%D0%BB%D0%B0%D1%82%D0%BD%D0%BE%D0%BC-%D1%85%D0%BE%D1%81%D1%82%D0%B8%D0%BD%D0%B3%D0%B5-%D1%81%D1%82%D0%B0%D1%82%D0%B8%D1%87%D0%B5%D1%81%D0%BA%D0%B8%D1%85-%D1%81%D0%B0%D0%B9%D1%82%D0%BE%D0%B2\" aria-label=\"рассмотрим создание простого сайта визитки и блога без навыков программирования и научимся разворачивать на бесплатном хостинге статических сайтов permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Рассмотрим создание простого сайта визитки и блога без навыков программирования, и научимся разворачивать на бесплатном хостинге статических сайтов</h3>\n<hr>\n<p>В данной статье опишу свой опыт, основанный на разработке <em>(если это так можно назвать)</em> данного сайта.</p>\n<p>При разработке сайта я пытался ограничить себя по времени и реализовать только базовый функционал, максимально используя готовые решения.\nПопытаемся сэкономить на всём, чтобы избежать малейшего оверинжениринга и упростить разработку сайта. </p>\n<p>Я разбил статью на две части: теория и практика.\nВ теории пытался рассказать про используемые технологии.\nУверен, что опытные разработчики ничего нового для себя не откроют.\nЕсли конечная цель - как можно быстрее задеплоить сайт, эту часть можно смело пропускать и переходить к <a href=\"#%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0\">практике</a>.</p>\n<p>Нам потребуются базовые навыки git и nodejs. Весь процесс не должен занять больше пары часов.</p>\n<h1 id=\"теория\" style=\"position:relative;\"><a href=\"#%D1%82%D0%B5%D0%BE%D1%80%D0%B8%D1%8F\" aria-label=\"теория permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Теория</h1>\n<h2 id=\"jamstack\" style=\"position:relative;\"><a href=\"#jamstack\" aria-label=\"jamstack permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JAMStack</h2>\n<p><a href=\"https://jamstack.wtf/\">JAMStack</a> - набирающий популярность подход разработки сайтов.\nСмысл его в том, чтобы отказаться от backend-части сайта в пользу генерации полностью статического контента и,\nпри необходимости, обращении к сторонним API</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/jam.jpg\" alt=\"JAM\" title=\"JAM\"></p>\n<p>Расшифруем JAM:</p>\n<ul>\n<li><strong>Javascript</strong> - <em>клиентский</em> javascript, ответственный за отрисовку и динамику сайта</li>\n<li><strong>APIs</strong> - сторонние API как источник данных</li>\n<li><strong>Markup</strong> - верстка, которая генерируется всякий раз при изменении данных</li>\n</ul>\n<p>Классический подход для разработки сайтов подразумевает backend часть (зачастую, CMS) и отдаваемую верстку.\nТакой подход, используемый годами, имеет множество плюсов.\nОднако в последнее время, новые инструменты отбирают большой кусок ниши, предоставляя более удобные решения.</p>\n<p>Разберемся, чем же JAMStack удобен:</p>\n<ul>\n<li><strong>Производительность</strong> - нет издержек на отработку серверных скриптов, а всю статику можно положить в CDN</li>\n<li><strong>Безопасность</strong> - нет бекенда и базы данных, поэтому сложнее найти уязвимость и взломать сайт</li>\n<li><strong>Приятнее разработка</strong> - разработка фокусируется только на фронтенд-части, остальное получим из сторонних API  </li>\n<li><strong>Масштабируемость</strong> - раскидываем статику в CDN по нескольким регионам и забываем о проблемах масштабирования</li>\n</ul>\n<p>С развитием JAMStack’а появились headless cms. Они отдают только через API и идеально решают вопрос предоставления\nконтента для JAMStack-сайтов.</p>\n<p>На хабре есть замечательная <a href=\"https://habr.com/ru/post/444600/\">статья</a> со сравнением существующих headless cms.\nОднако, мне кажутся интересными <a href=\"https://strapi.io/\">strapi</a>, <a href=\"https://www.contentful.com/\">contentful</a> и\n<a href=\"https://saleor.io/\">saleor</a>, если нужен онлайн-магазин</p>\n<h2 id=\"gatsby\" style=\"position:relative;\"><a href=\"#gatsby\" aria-label=\"gatsby permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Gatsby</h2>\n<p><a href=\"https://www.gatsbyjs.com/\">Gatsby</a> - основанный на reactjs фреймворк для построения JAMStack сайтов. О нём уже\nнаписано множество статей, в том числе, в русскоязычном интернете.</p>\n<p>Если вкраце, он поддерживает огромное множество плагинов для работы с источниками данных, предоставляет доступ к ним\nпри помощи graphql для фронтенд части, в которой уже можно при помощи react’а нагенерировать нужную статику.</p>\n<p>Естественно, всё обёрнуто в удобный инструментарий, есть из коробки просмотр доступных данных для составления\ngraphql-запросов и множество <a href=\"https://www.gatsbyjs.com/plugins\">плагинов</a> на любой вкус.</p>\n<p>При желании можно (<em>но не нужно</em>) даже подключиться к сайту\n<a href=\"https://github.com/gatsbyjs/gatsby-source-wordpress-experimental/\">wordpress</a> для получения контента.</p>\n<p>Также из приятных мелочей, gatsby имеет мощные инструменты для seo оптимизации. Плагин\n<a href=\"https://www.gatsbyjs.com/plugins/gatsby-image/\">gatsby-image</a> поможет нам оптимизировать изображения на сайте для\nбыстрой, приятной подгрузки, а <a href=\"https://www.gatsbyjs.com/plugins/gatsby-plugin-offline/\">gatsby-plugin-offline</a> в два\nклика создаст из нашего сайта PWA (<em>ну почти</em>) с offline доступом к контенту.</p>\n<h2 id=\"github-pages\" style=\"position:relative;\"><a href=\"#github-pages\" aria-label=\"github pages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github Pages</h2>\n<p>Имея в руках такой отличный инструмент, хочется использовать все его плюсы. Если нам не нужен бекенд, вероятно, мы\nможем сильно сэкономить на хостинге.</p>\n<p>На помощь нам приходит <a href=\"https://pages.github.com/\">github pages</a> - бесплатный хостинг статических сайтов от Github.</p>\n<p>Первоначальная цель проекта - предоставить простой инструмент для хостинга информационных сайтов для проектов в\ngithub’е, а также персональных страничек для разработчиков.</p>\n<p>Чтобы использовать его, нам достаточно просто создать репозиторий <code>&#x3C;your_username>.gihub.io</code> и вся статика, которую мы\nтуда положим, будет доступна по адресу <code>https://&#x3C;your_username>.github.io</code></p>\n<h1 id=\"практика\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%B0%D0%BA%D1%82%D0%B8%D0%BA%D0%B0\" aria-label=\"практика permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Практика</h1>\n<p>Перейдём к практической части статьи. Для продолжения нам понадобятся:</p>\n<ul>\n<li><a href=\"https://nodejs.org/en/\"><strong>nodejs</strong></a> </li>\n<li><a href=\"https://git-scm.com/downloads\"><strong>git client</strong></a></li>\n</ul>\n<p>Ну и, естественно, базовые навыки работы с этими инструментами.\nТакже я настоятельно рекомендую использовать <a href=\"https://yarnpkg.com/\">yarn</a>:</p>\n<pre><code>npm install -g yarn\n</code></pre>\n<p>Можно еще всё это, например, обернуть в Docker, <em>но не нужно</em>. Как писал в начале, основная цель статьи - научиться\nсоздавать подобные сайты быстро и просто без оверинжениринга. </p>\n<h2 id=\"установка-gatsby\" style=\"position:relative;\"><a href=\"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-gatsby\" aria-label=\"установка gatsby permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Установка Gatsby</h2>\n<p>Начнём с Gatsby.</p>\n<p>Для этого установим gatsby глобально (<em>это важно</em>):</p>\n<pre><code>npm install -g gatsby-cli\n</code></pre>\n<p>Далее, можно прочитать официальный <a href=\"https://www.gatsbyjs.com/docs/quick-start/\">quick start</a>, и документацию,\nоднако, цель этой статьи, приготовить сайт как можно быстро, поэтому воспользуемся готовыми starter’ами,\nпредоставляемыми сообществом. </p>\n<h2 id=\"установка-starter\" style=\"position:relative;\"><a href=\"#%D1%83%D1%81%D1%82%D0%B0%D0%BD%D0%BE%D0%B2%D0%BA%D0%B0-starter\" aria-label=\"установка starter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Установка starter</h2>\n<p>Starter - это, готовый шаблон на gatsby, который можно кастомизировать под себя.\nДавайте подыщем подходящий для нас в <a href=\"https://www.gatsbyjs.com/starters/?v=2\">каталоге</a> или можно использовать\n<a href=\"https://www.gatsbyjs.com/starters/dospolov/gatsby-starter-blog-and-cv/\">gatsby-starter-blog-and-cv</a> который я\nиспользовал для этого сайта. Перейдём в подходящую директорию и выполним:</p>\n<pre><code>gatsby new gatsby-starter-blog-and-cv https://github.com/dospolov/gatsby-starter-blog-and-cv\n</code></pre>\n<p>далее, будет выбор между npm и yarn, выберем yarn и дождемся окончания установки</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/gatsby-install.png\" alt=\"Gatsby Install\" title=\"Gatsby Install\"></p>\n<p>Проверим, что всё установилось корректно. Зайдём в созданную директорию и запустим тестовый сервер: </p>\n<pre><code>cd gatsby-starter-blog-and-cv\nnpm run develop\n</code></pre>\n<p>Увидим что-то подобное:</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/gatsby-dev-server-start.png\" alt=\"Gatsby Dev Server Start\" title=\"Gatsby Dev Server Start\"></p>\n<p>Наш тестовый сервер будет доступен по адресу <code>http://localhost:8000/</code>, а playground для graphql\nзапросов по адресу <code>http://localhost:8000/___graphql</code>.</p>\n<p>Если порт <code>8000</code> занят, то нам предложат запустить на другом порту.</p>\n<p>Если по адресу дев-сервера мы видим что-то вроде этого:</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/gatsby-dev-server.png\" alt=\"Gatsby Dev Server\" title=\"Gatsby Dev Server\"></p>\n<p>значит, что мы сделали всё верно. </p>\n<h2 id=\"настройка-starter\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-starter\" aria-label=\"настройка starter permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка starter</h2>\n<p>Теперь нам необходимо настроить полученный шаблон под себя</p>\n<ol>\n<li>Отредактируем файл <code>./config.js</code> — там находится основная информация</li>\n<li>Проверим файл <code>./gatsby-config.js</code> и если нужно — поправим его. Там можно найти список подключенных плагинов. Подробную информацию о каждом можно найти в официальном <a href=\"https://www.gatsbyjs.com/plugins/\">каталоге плагинов</a> </li>\n<li>По умолчанию, весь контент находится в папке <code>./content</code> в виде <a href=\"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet\">markdown</a> страниц. </li>\n<li>Ассеты находятся в папке <code>./static</code> (<em>на самом деле, не только. См. <code>./gatsby-config.js</code></em>). Туда можно заливать медиа файлы и вставлять ссылки на них в контент</li>\n</ol>\n<p>При желании можно отредактировать верстку, но это выходит за рамки <em>максимально простого мануала</em>.</p>\n<h2 id=\"настройка-github-pages\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-github-pages\" aria-label=\"настройка github pages permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка Github Pages</h2>\n<h3 id=\"репозиторий\" style=\"position:relative;\"><a href=\"#%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%B9\" aria-label=\"репозиторий permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Репозиторий</h3>\n<p>Чтобы использовать github pages, необходимо создать репозиторий с именем <code>&#x3C;your-github-username>.github.io</code>. В моём случае это <code>mabalashov.github.io</code>.</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/new-repository.png\" alt=\"New Repository\" title=\"New Repository\"></p>\n<p>Для работы с github pages используем уже <a href=\"https://www.npmjs.com/package/gh-pages\">готовый пакет</a>:</p>\n<pre><code>npm install gh-pages --save-dev\n</code></pre>\n<h3 id=\"github-token\" style=\"position:relative;\"><a href=\"#github-token\" aria-label=\"github token permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Github token</h3>\n<p>Github token это OAuth <a href=\"https://docs.github.com/en/github/extending-github/git-automation-with-oauth-tokens\">токен</a>,\nпри помощи которого можно взаимодействовать с репозиторием из скриптов. На странице настроек репозитория можно\nсгенерировать нужные токены, а также ограничить каждому права доступа. </p>\n<p>Для того, чтобы закоммитить в репозиторий, нам также нужен будет github token.\nПолучаем его на странице <code>https://github.com/settings/tokens</code> -> <em>Generate New Token</em></p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/generate-github-token.png\" alt=\"Generate github token\" title=\"Generate github token\"></p>\n<p>Вводим любое имя для нового токена и ставим галочку напротив <em>repo</em>. Кликаем Generate и копируем токен, который отобразится.</p>\n<h3 id=\"npm-script\" style=\"position:relative;\"><a href=\"#npm-script\" aria-label=\"npm script permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>npm script</h3>\n<p>Для того, чтобы упростить дальнейшую работу, мы можем добавить скрипт деплоя в наш проект.\nТогда, чтобы задеплоить результаты на github pages, нам будет достаточно ввести в консоли <code>yarn run deploy</code>.  </p>\n<p>Добавим скрипт деплоя в секцию <code>scripts</code> файла <code>package.json</code>:</p>\n<pre><code>{\n  ...\n  \"scripts\": {\n    ...\n    \"deploy\": \"gh-pages-clean &#x26;&#x26; gatsby build --prefix-paths &#x26;&#x26; gh-pages -d public -r https://&#x3C;your-github-token>@github.com/&#x3C;your-github-username>/&#x3C;your-github-username>.github.io\",\n    ...\n</code></pre>\n<p>, в котором заменим </p>\n<ul>\n<li><code>your-github-token</code> на токен полученный в предыдущем шаге</li>\n<li><code>your-github-username</code> на ваше имя пользователя github</li>\n</ul>\n<hr>\n<h4 id=\"внимание\" style=\"position:relative;\"><a href=\"#%D0%B2%D0%BD%D0%B8%D0%BC%D0%B0%D0%BD%D0%B8%D0%B5\" aria-label=\"внимание permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><em>Внимание</em></h4>\n<h4 id=\"для-простоты-мы-скопировали-секретный-токен-в-packagejson-что-является-очень-не-безопасно\" style=\"position:relative;\"><a href=\"#%D0%B4%D0%BB%D1%8F-%D0%BF%D1%80%D0%BE%D1%81%D1%82%D0%BE%D1%82%D1%8B-%D0%BC%D1%8B-%D1%81%D0%BA%D0%BE%D0%BF%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BB%D0%B8-%D1%81%D0%B5%D0%BA%D1%80%D0%B5%D1%82%D0%BD%D1%8B%D0%B9-%D1%82%D0%BE%D0%BA%D0%B5%D0%BD-%D0%B2-packagejson-%D1%87%D1%82%D0%BE-%D1%8F%D0%B2%D0%BB%D1%8F%D0%B5%D1%82%D1%81%D1%8F-%D0%BE%D1%87%D0%B5%D0%BD%D1%8C-%D0%BD%D0%B5-%D0%B1%D0%B5%D0%B7%D0%BE%D0%BF%D0%B0%D1%81%D0%BD%D0%BE\" aria-label=\"для простоты мы скопировали секретный токен в packagejson что является очень не безопасно permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Для простоты мы скопировали секретный токен в <em>package.json</em>, что является очень не безопасно.</h4>\n<h4 id=\"код-проекта-нельзя-будет-выложить-в-свободный-доступ-иначе-токен-будет-общедоступным\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%BE%D0%B4-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B0-%D0%BD%D0%B5%D0%BB%D1%8C%D0%B7%D1%8F-%D0%B1%D1%83%D0%B4%D0%B5%D1%82-%D0%B2%D1%8B%D0%BB%D0%BE%D0%B6%D0%B8%D1%82%D1%8C-%D0%B2-%D1%81%D0%B2%D0%BE%D0%B1%D0%BE%D0%B4%D0%BD%D1%8B%D0%B9-%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF-%D0%B8%D0%BD%D0%B0%D1%87%D0%B5-%D1%82%D0%BE%D0%BA%D0%B5%D0%BD-%D0%B1%D1%83%D0%B4%D0%B5%D1%82-%D0%BE%D0%B1%D1%89%D0%B5%D0%B4%D0%BE%D1%81%D1%82%D1%83%D0%BF%D0%BD%D1%8B%D0%BC\" aria-label=\"код проекта нельзя будет выложить в свободный доступ иначе токен будет общедоступным permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Код проекта нельзя будет выложить в свободный доступ, иначе токен будет общедоступным.</h4>\n<h4 id=\"поэтому-ни-в-коем-случае-не-выкладываем-этот-код-в-github-хотя-бы-в-публичных-репозитории\" style=\"position:relative;\"><a href=\"#%D0%BF%D0%BE%D1%8D%D1%82%D0%BE%D0%BC%D1%83-%D0%BD%D0%B8-%D0%B2-%D0%BA%D0%BE%D0%B5%D0%BC-%D1%81%D0%BB%D1%83%D1%87%D0%B0%D0%B5-%D0%BD%D0%B5-%D0%B2%D1%8B%D0%BA%D0%BB%D0%B0%D0%B4%D1%8B%D0%B2%D0%B0%D0%B5%D0%BC-%D1%8D%D1%82%D0%BE%D1%82-%D0%BA%D0%BE%D0%B4-%D0%B2-github-%D1%85%D0%BE%D1%82%D1%8F-%D0%B1%D1%8B-%D0%B2-%D0%BF%D1%83%D0%B1%D0%BB%D0%B8%D1%87%D0%BD%D1%8B%D1%85-%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D0%B8\" aria-label=\"поэтому ни в коем случае не выкладываем этот код в github хотя бы в публичных репозитории permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Поэтому ни в коем случае не выкладываем этот код в github, хотя бы в публичных репозитории.</h4>\n<h4 id=\"более-правильное-решение----передавать-токен-в-переменной-окружения-но-это-выходит-за-рамки-данной-статьи\" style=\"position:relative;\"><a href=\"#%D0%B1%D0%BE%D0%BB%D0%B5%D0%B5-%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D0%BE%D0%B5-%D1%80%D0%B5%D1%88%D0%B5%D0%BD%D0%B8%D0%B5----%D0%BF%D0%B5%D1%80%D0%B5%D0%B4%D0%B0%D0%B2%D0%B0%D1%82%D1%8C-%D1%82%D0%BE%D0%BA%D0%B5%D0%BD-%D0%B2-%D0%BF%D0%B5%D1%80%D0%B5%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B9-%D0%BE%D0%BA%D1%80%D1%83%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BD%D0%BE-%D1%8D%D1%82%D0%BE-%D0%B2%D1%8B%D1%85%D0%BE%D0%B4%D0%B8%D1%82-%D0%B7%D0%B0-%D1%80%D0%B0%D0%BC%D0%BA%D0%B8-%D0%B4%D0%B0%D0%BD%D0%BD%D0%BE%D0%B9-%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B8\" aria-label=\"более правильное решение    передавать токен в переменной окружения но это выходит за рамки данной статьи permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Более правильное решение — передавать токен в переменной окружения, но это выходит за рамки данной статьи</h4>\n<h4 id=\"про-правильную-настройку-cicd-можно-прочитать-здесь\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE-%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D1%8C%D0%BD%D1%83%D1%8E-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D1%83-cicd-%D0%BC%D0%BE%D0%B6%D0%BD%D0%BE-%D0%BF%D1%80%D0%BE%D1%87%D0%B8%D1%82%D0%B0%D1%82%D1%8C-%D0%B7%D0%B4%D0%B5%D1%81%D1%8C\" aria-label=\"про правильную настройку cicd можно прочитать здесь permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Про правильную настройку CI/CD можно прочитать <a href=\"https://habr.com/ru/post/474668/\">здесь</a></h4>\n<hr>\n<h3 id=\"настройка-github-pages-для-репозитория\" style=\"position:relative;\"><a href=\"#%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B0-github-pages-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B5%D0%BF%D0%BE%D0%B7%D0%B8%D1%82%D0%BE%D1%80%D0%B8%D1%8F\" aria-label=\"настройка github pages для репозитория permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Настройка github pages для репозитория</h3>\n<p>Теперь идём в github, выбираем репозиторий для нашего сайта и переходим в <em>settings</em> и ищем раздел Github Pages:</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/github-pages-config.png\" alt=\"Github pages settings\" title=\"Github pages settings\"></p>\n<p>Выбираем ветку, в которой находится код нашего сайта. По умолчанию установленный пакет будет коммитить всё в ветку <code>gh-pages</code>,\nпоэтому выбираем её.</p>\n<h3 id=\"проверим\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%BE%D0%B2%D0%B5%D1%80%D0%B8%D0%BC\" aria-label=\"проверим permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Проверим</h3>\n<p>Вызовем в консоли скрипт деплоя:</p>\n<pre><code>yarn run deploy\n</code></pre>\n<p>и теперь, через несколько минут, как скрипт отработает, по адресу <code>&#x3C;your-github-username>.github.io</code> можно будет увидеть наш сайт. </p>\n<h2 id=\"привязываем-доменное-имя-опционально\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%B8%D0%B2%D1%8F%D0%B7%D1%8B%D0%B2%D0%B0%D0%B5%D0%BC-%D0%B4%D0%BE%D0%BC%D0%B5%D0%BD%D0%BD%D0%BE%D0%B5-%D0%B8%D0%BC%D1%8F-%D0%BE%D0%BF%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE\" aria-label=\"привязываем доменное имя опционально permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Привязываем доменное имя (опционально)</h2>\n<p>Давайте теперь привяжем доменное имя к нашему сайту. В принципе, этот шаг можно пропустить, но если вы хотите более\nкрасивый домен и у вас есть лишние пару десятков долларов в год, то продолжим</p>\n<p>Идём на любой регистратор доменных имён, например, на <a href=\"https://godaddy.com/\">GoDaddy</a> покупаем домен и создаем три записи типа <code>A</code>:</p>\n<pre><code>185.199.108.153 \n185.199.109.153 \n185.199.110.153 \n185.199.111.153 \n</code></pre>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/dns.png\" alt=\"DNS\" title=\"DNS\"></p>\n<p>Теперь опять возвращаемся в настройки нашего репозитория и указываем ему в поле <code>Custom domain</code> купленный домен. Получится что-то подобное:</p>\n<p><img src=\"/media/2020-08-23-create-gatsby-github-pages-blog/github-pages-config-ready.png\" alt=\"Github pages settings ready\" title=\"Github pages settings ready\"></p>\n<p>На самом деле, это действие создаст файл с именем CNAME и именем домена внутри, в корне репозитория.\nПри следующем деплое, этот файл будет удалён.\nЧтобы не пересоздавать его всякий раз вручную, положим такой же файл в наш проект в папку <code>static</code>.\nВ таком случае, при следующем деплое, gatsby положит этот файл в корень сам.</p>\n<p>Рекомендую установить галочку <em>Enforce HTTPS</em> чтобы сайт был доступен по https — это повышает доверие к сайту со стороны пользователей и поисковых систем.</p>\n<p>Теперь осталось подождать несколько минут и наш сайт будет доступен по только что созданному домену.</p>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://www.gatsbyjs.com/docs/how-gatsby-works-with-github-pages/\">How Gatsby Works with GitHub Pages</a></li>\n<li><a href=\"https://developer.mozilla.org/ru/docs/Learn/Common_questions/Using_Github_pages\">Как использовать GitHub Pages?</a></li>\n<li><a href=\"https://dou.ua/lenta/articles/jamstack/\">Фишки JAMstack: почему статические сайты превосходят традиционные динамические</a></li>\n</ul>","fields":{"slug":"/posts/create-gatsby-github-pages-blog","categorySlug":"/category/recipes","tagSlugs":["/tag/frontend","/tag/gatsby","/tag/github pages"]},"frontmatter":{"title":"Создание сайта портфолио и блога при помощи Gatsby и Github Pages","date":"2020-08-23T21:35:00.000Z","tags":["frontend","gatsby","github pages"],"category":"recipes","description":"Рассмотрим создание простого сайта визитки и блога без навыков программирования, и научимся разворачивать на бесплатном хостинге статических сайтов","priority":0}}},{"node":{"html":"<h3 id=\"серия-статей-основанных-на-собственном-опыте-об-особенностях-настройки-docker-swarm-для-работы-с-datadog\" style=\"position:relative;\"><a href=\"#%D1%81%D0%B5%D1%80%D0%B8%D1%8F-%D1%81%D1%82%D0%B0%D1%82%D0%B5%D0%B9-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%BD%D0%B0-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%BC-%D0%BE%D0%BF%D1%8B%D1%82%D0%B5-%D0%BE%D0%B1-%D0%BE%D1%81%D0%BE%D0%B1%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8F%D1%85-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8-docker-swarm-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-datadog\" aria-label=\"серия статей основанных на собственном опыте об особенностях настройки docker swarm для работы с datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog.</h3>\n<hr>\n<p>Серия статей</p>\n<ol>\n<li><a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog</a></li>\n<li><strong>Настраиваем Datadog APM в сети Docker Swarm</strong> </li>\n<li><a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></li>\n<li><a href=\"/posts/datadog-monitor-slack-notifications\">Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</a></li>\n</ol>\n<p>В предыдущей статье мы создали сеть для внутренних сервисов в Docker Swarm, теперь пора использовать её для подключения\nDatadog APM </p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog.png\" alt=\"Datadog\" title=\"Datadog\"></p>\n<p>Настроим Datadog, чтобы он собирал traces с наших сервисов.\nПрезентацию возможностей этого инструмента можно найти <a href=\"https://docs.datadoghq.com/tracing/\">здесь</a></p>\n<p>Краткое описание настройки APM можно найти в Datadog: APM > Setup &#x26; Configuration > Service Setup</p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog-setup-apm.png\" alt=\"Datadog Setup APM\" title=\"Datadog Setup APM\"></p>\n<h1 id=\"datadog-agent\" style=\"position:relative;\"><a href=\"#datadog-agent\" aria-label=\"datadog agent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog Agent</h1>\n<h2 id=\"datadog-agent-image\" style=\"position:relative;\"><a href=\"#datadog-agent-image\" aria-label=\"datadog agent image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog agent image</h2>\n<p>В первую очередь добавим контейнер с datadog-agent в наши сервисы. Пропишем в <em>docker-compose.yaml</em>:</p>\n<pre><code>services:\n  ...\n  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n</code></pre>\n<p>Я зафиксировал определенную версию образа (<code>6.10.2</code>), но в принципе, можно указать, чтобы всегда брался последний образ: <code>datadog/agent:latest</code></p>\n<p>Открывать порт <em>8126</em>, как описано в документации необязательно, потому что все сервисы и <em>docker-agent</em> будут в одной сети. </p>\n<p>Однако необходимо указать <code>DD_APM_NON_LOCAL_TRAFFIC=true</code>, чтобы разрешить трейсинг из\n<a href=\"https://docs.datadoghq.com/agent/docker/apm/?tab=standard#tracing-from-other-containers\">других контейнеров</a></p>\n<p><a href=\"https://docs.datadoghq.com/agent/docker/apm/?tab=standard#docker-apm-agent-environment-variables\">Здесь</a>\nможно найти список всех возможных переменных окружения</p>\n<p>В <code>DD_TAGS='env:'</code> для удобства стоит указать какой-либо идентификатор приложения и, если мы используем\n<em>datadog</em> для dev-окружения, то можно добавить для удобства имя тестируемой ветки.</p>\n<p>Не забываем указать, чтобы агент использовал сеть <code>datadog-agent</code>, которую мы создали на предыдущих шагах</p>\n<h2 id=\"datadog-agent-log-collector\" style=\"position:relative;\"><a href=\"#datadog-agent-log-collector\" aria-label=\"datadog agent log collector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog agent log collector</h2>\n<p>Если мы хотим, чтобы <em>datadog</em> собирал логи сервисов, стоит привести описание к следующему виду:</p>\n<pre><code>services:\n  ...\n  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n      - DD_LOGS_ENABLED=true\n      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n    labels:\n      com.datadoghq.ad.logs: '[{\"source\": \"datadog-agent\", \"service\": \"agent\"}]'\n</code></pre>\n<p>Для этого мы добавили две переменные окружения:</p>\n<ul>\n<li><code>DD_LOGS_ENABLED</code></li>\n<li><code>DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL</code></li>\n</ul>\n<p>которые включают сбор логов и просят <em>datadog</em> автоматически определять запущенные сервисы в контейнерах.</p>\n<p>Также, при помощи директивы <code>com.datadoghq.ad.logs</code>, можно вручную указать правила для сборщика логов (но это не обязательно)</p>\n<p>Более подробно о настройке <em>datadog log collector</em> можно найти в <a href=\"https://docs.datadoghq.com/agent/docker/log/?tab=containerinstallation\">официальной документации</a></p>\n<h1 id=\"php-tracer\" style=\"position:relative;\"><a href=\"#php-tracer\" aria-label=\"php tracer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PHP tracer</h1>\n<p>Чтобы наши контейнеры отправляли данные в <em>datadog-agent</em>, необходимо установить соответствующий трейсер.\nВ нашем примере, мы используем приложение на PHP, потому рассмотрим именно PHP-tracer. </p>\n<h2 id=\"installation\" style=\"position:relative;\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<p>Шаги установки подробно описаны в официальной <a href=\"https://docs.datadoghq.com/tracing/setup/php/#install-the-extension\">документации</a>.\nТам же можно найти <a href=\"https://github.com/DataDog/dd-trace-php/releases/latest\">ссылки</a> для скачивания подходящей версии php tracer.</p>\n<p>В моём dockerfile установка php tracer выглядит так:</p>\n<pre><code>FROM php:7.4-fpm-alpine\n\n...\n\nRUN curl -L -o /tmp/datadog-php-tracer.apk https://github.com/DataDog/dd-trace-php/releases/download/0.47.1/datadog-php-tracer_0.47.1_noarch.apk \\\n    &#x26;&#x26; apk add /tmp/datadog-php-tracer.apk --allow-untrusted \\\n    &#x26;&#x26; rm -r /tmp/datadog-php-tracer.apk\n</code></pre>\n<p>Но у вас может немного отличаться в зависимости от образа, на основе которого вы собираете PHP-контейнер.</p>\n<p>Например, если вы используете ubuntu, а не alpine, то стоит скачивать и устанавливать <code>.deb</code> пакет</p>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>Обновим описание сервиса php в нашем <em>docker-compose.yaml</em>:</p>\n<pre><code>services:\n...\n  php-fpm:\n    depends_on:\n      - agent\n    networks:\n      ...\n      - datadog-agent\n    environment:\n        DD_AGENT_HOST: agent\n        DD_TRACE_ANALYTICS_ENABLED: true\n        DD_TRACE_SYMFONY_ANALYTICS_ENABLED: true\n        DD_TRACE_PDO_ANALYTICS_ENABLED: true\n        DD_TRACE_PREDIS_ANALYTICS_ENABLED: true\n        DD_TRACE_GUZZLE_ANALYTICS_ENABLED: true\n    ...\n</code></pre>\n<p>Здесь мы указали, что:</p>\n<ul>\n<li>сервис будет зависеть от datadog-agent (agent - имя сервиса, которое было задано для datadog-agent в\ndocker-compose.yaml), чтобы удостовериться, что datadog-agent был запущен раньше него</li>\n<li>сервис будет использовать сеть datadog-agent, которую мы создали на предыдущих шагах</li>\n<li><code>DD_AGENT_HOST</code> - указали хост, по которому можно найти datadog-agent в нашей сети. Как было написано ранее, он\nлибо будет совпадать с именем сервиса, либо будет содержать в себе также имя стека, в зависимости от способа запуска</li>\n<li><code>DD_TRACE_*</code> - указали, что именно мы хотим трассировать</li>\n</ul>\n<p>Полный список доступных переменных окружения для трейсера можно найти <a href=\"https://docs.datadoghq.com/tracing/setup/php/#environment-variable-configuration\">здесь</a></p>\n<h2 id=\"troubleshooting\" style=\"position:relative;\"><a href=\"#troubleshooting\" aria-label=\"troubleshooting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Troubleshooting</h2>\n<p>Проверим, что трейсер запустился</p>\n<p>Зайдем в контейнер, для которого мы настраивали трейсер (пусть будет <em>php-fpm</em>)</p>\n<pre><code>docker ps | grep php-fpm\ndocker exec -it &#x3C;CONTAINER_ID> /bin/bash\n</code></pre>\n<p>И проверим, состояние РНР трейсера:</p>\n<pre><code>php --ri=ddtrace\n</code></pre>\n<p>Если трейсер установлен - увидим его конфигурацию. Что-то вроде:</p>\n<pre><code>Datadog PHP tracer extension\nFor help, check out the documentation at https://docs.datadoghq.com/tracing/languages/php/\n(c) Datadog 2020\n\nDatadog tracing support => enabled\nVersion => 1.0.0-nightly\nDATADOG TRACER CONFIGURATION => {\n    \"date\": \"2020-07-01T17:43:54Z\",\n    \"os_name\": \"Linux 49b1cb4bdd12 4.19.76-linuxkit #1 SMP Tue May 26 11:42:35 UTC 2020 x86_64\",\"os_version\":\"4.19.76-linuxkit\",\n    \"version\": \"1.0.0-nightly\",\n    \"lang\": \"php\",\n    \"lang_version\": \"7.4.5\",\n    \"env\": null,\n    \"enabled\": true,\n    \"service\": null,\n    \"enabled_cli\": false,\n    \"agent_url\": \"https://localhost:8126\",\n    \"debug\": false,\n    \"analytics_enabled\": false\n    \"sample_rate\": 1.000000,\n    \"sampling_rules\": null,\n    \"tags\": null,\n    \"service_mapping\": null,\n    \"distributed_tracing_enabled\": true,\n    \"priority_sampling_enabled\": true,\n    \"dd_version\": null,\n    \"architecture\": \"x86_64\",\n    \"sapi\": \"cli\",\n    \"ddtrace.request_init_hook\": null,\n    \"open_basedir_configured\": false,\n    \"uri_fragment_regex\": null,\n    \"uri_mapping_incoming\": null,\n    \"uri_mapping_outgoing\": null,\n    \"auto_flush_enabled\": false,\n    \"generate_root_span\": true,\n    \"http_client_split_by_domain\": false,\n    \"measure_compile_time\": true,\n    \"report_hostname_on_root_span\": false,\n    \"traced_internal_functions\": null,\n    \"auto_prepend_file_configured\": false,\n    \"integrations_disabled\": null,\n    \"enabled_from_env\": true,\n    \"opcache.file_cache\": null,\n    \"agent_error\": \"Couldn't connect to server\",\n    \"ddtrace.request_init_hook_reachable\": false\n}\n\nDiagnostics\nagent_error => Couldn't connect to server\nddtrace.request_init_hook_reachable => false\n\nDirective => Local Value => Master Value\nddtrace.disable => Off => Off\n</code></pre>\n<p>Также, из данной строки можно найти <a href=\"https://docs.datadoghq.com/tracing/troubleshooting/tracer_startup_logs/?tab=php\">startup logs</a>:\nошибка, с которой упал трейсер при попытке запуститься (если таковая была). В данном примере, ошибка: ”<em>Couldn’t connect to server”</em> -\nвероятно, путь до datadog-agent указан неверно или сам агент не запущен, в таком случае, первым делом стоит проверить,\nесть ли связь с datadog-agent’ом.</p>\n<h3 id=\"dd-doctorphp\" style=\"position:relative;\"><a href=\"#dd-doctorphp\" aria-label=\"dd doctorphp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dd-doctor.php</h3>\n<p>Если на данном этапе проблема не выявлена, можно воспользоваться скриптом dd-doctor: </p>\n<pre><code>php /opt/datadog-php/dd-trace-sources/src/dd-doctor.php\n</code></pre>\n<p>или, если данный файл по каким-то причинам отсутствует:</p>\n<pre><code>curl -L -o /tmp/dd-doctor.php https://raw.githubusercontent.com/DataDog/dd-trace-php/master/src/dd-doctor.php\nphp /tmp/dd-doctor.php\n</code></pre>\n<p>Который проведет диагностику трейсера и выведет основную информацию:</p>\n<pre><code>bash-5.0# \n[2020-08-21T11:17:52+00:00] [ddtrace] [debug] - New span dd-doctor.php  recorded.\n[2020-08-21T11:17:52+00:00] [ddtrace] [debug] - Attempting integrations load\n....\n\nWARNING: Script is running from the CLI SAPI.\n         Please run this script from your web browser.\n\nDataDog trace extension verification\n\n- PHP version and SAPI                               [7.4.9 - cli]\n- ddtrace extension installed                        [OK]\n- ddtrace version (installed)                        [0.47.1]\n- ddtrace version (const)                            [0.47.1]\n- ddtrace version (userland)                         [0.47.1]\n- ddtrace versions in sync                           [OK]\n- dd_trace() function available                      [OK]\n- dd_trace_env_config() function available           [OK]\n- ddtrace.request_init_hook set                      [OK]\n- ddtrace.request_init_hook reachable                [OK]\n- ddtrace.request_init_hook has run                  [OK]\n- 'open_basedir' allows access to '/proc/self/'      [OK]\n- IntegrationsLoader exists                          [OK]\n- Integrations not loaded yet                        [OK]\n- Registering an autoloader...\n- Integrations loaded                                [OK]\n- DDTrace\\Tracer class exists                        [OK]\n- Background sender is enabled?                      [YES]\n- Opcache installed:                                 [YES]\n  > opcache.enable = 1\n  > opcache.enable_cli = 1\n  > opcache.use_cwd = 1\n  > opcache.validate_timestamps = 1\n  > opcache.validate_permission =\n  > opcache.validate_root =\n  > opcache.dups_fix =\n  > opcache.revalidate_path =\n  > opcache.log_verbosity_level = 1\n  > opcache.memory_consumption = 134217728\n  > opcache.interned_strings_buffer = 8\n  > opcache.max_accelerated_files = 10000\n  > opcache.max_wasted_percentage = 0.05\n  > opcache.consistency_checks = 0\n  > opcache.force_restart_timeout = 180\n  > opcache.revalidate_freq = 2\n  > opcache.preferred_memory_model =\n  > opcache.blacklist_filename =\n  > opcache.max_file_size = 0\n  > opcache.error_log =\n  > opcache.protect_memory =\n  > opcache.save_comments = 1\n  > opcache.enable_file_override =\n  > opcache.optimization_level = 2147401727\n  > opcache.lockfile_path = /tmp\n  > opcache.file_cache =\n  > opcache.file_cache_only =\n  > opcache.file_cache_consistency_checks = 1\n  > opcache.file_update_protection = 2\n  > opcache.opt_debug_level = 0\n  > opcache.restrict_api =\n  > opcache.huge_code_pages =\n  > opcache.preload =\n  > opcache.preload_user =\n- Configured Agent host                              [localhost]\n- Configured Agent port                              [8126]\n- Agent can receive traces                           [OK]\n</code></pre>\n<p>Более подробно шаги описаны в <a href=\"https://docs.datadoghq.com/tracing//\">официальной документации</a></p>\n<h2 id=\"datadog-apm\" style=\"position:relative;\"><a href=\"#datadog-apm\" aria-label=\"datadog apm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog APM</h2>\n<p>Далее проверим результат. Зайдём в Datadog: APM > Services и мы должны увидеть что-то подобное:</p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog-apm-interface.png\" alt=\"Datadog APM Interface\" title=\"Datadog APM Interface\"></p>\n<p>Стоит обратить внимание на фильтры; убедиться что выбран верный tag (на данном скриншоте <code>env:feature-datadog</code>),\nкоторый мы указали в описании сервиса <em>datadog-agent</em> в <em>docker-compose.yaml</em> и корректный временной промежуток.</p>\n<hr>\n<p>Предыдущая статья <a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog</a></p>\n<p>Следующая статья <a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Мониторим состояние php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></p>\n<hr>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://habr.com/ru/company/flant/blog/465177/\">Не New Relic’ом одним: взгляд на Datadog и Atatus</a></li>\n</ul>","fields":{"slug":"/posts/connect-datadog-apm-to-docker-swarm","categorySlug":"/category/recipes","tagSlugs":["/tag/datadog","/tag/devops","/tag/ubuntu","/tag/php","/tag/php-fpm","/tag/nginx","/tag/infrastructure","/tag/docker","/tag/docker swarm"]},"frontmatter":{"title":"Настраиваем Datadog APM в сети Docker Swarm","date":"2020-08-22T21:45:00.000Z","tags":["datadog","devops","ubuntu","php","php-fpm","nginx","infrastructure","docker","docker swarm"],"category":"recipes","description":"Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog. ","priority":0}}},{"node":{"html":"<h3 id=\"серия-статей-основанных-на-собственном-опыте-об-особенностях-настройки-docker-swarm-для-работы-с-datadog\" style=\"position:relative;\"><a href=\"#%D1%81%D0%B5%D1%80%D0%B8%D1%8F-%D1%81%D1%82%D0%B0%D1%82%D0%B5%D0%B9-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%BD%D0%B0-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%BC-%D0%BE%D0%BF%D1%8B%D1%82%D0%B5-%D0%BE%D0%B1-%D0%BE%D1%81%D0%BE%D0%B1%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8F%D1%85-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8-docker-swarm-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-datadog\" aria-label=\"серия статей основанных на собственном опыте об особенностях настройки docker swarm для работы с datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog.</h3>\n<hr>\n<ol>\n<li><strong>Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog</strong></li>\n<li><a href=\"/posts/connect-datadog-apm-to-docker-swarm\">Настраиваем Datadog APM в сети Docker Swarm</a></li>\n<li><a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></li>\n<li><a href=\"/posts/datadog-monitor-slack-notifications\">Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</a></li>\n</ol>\n<p>Недавно попал в руки сервис на PHP + nginx, развёрнутый при помощи Docker Swarm.</p>\n<p>Сервис был на этапе бурной разработки, однако, никаких средств мониторинга настроено не было.</p>\n<p>Первым делом, мной был прикручен Sentry для мониторинга ошибок и следующим шагом я стал прикручивать <a href=\"https://www.datadoghq.com/\">Datadog APM</a>.</p>\n<p>На этом шаге пришлось немного погрузиться в особенности Docker Swarm, об этом и будет эта серия статей</p>\n<p><img src=\"/media/2020-08-22-create-docker-swarm-network-for-datadog/docker-swarm.png\" alt=\"Docker Swarm\" title=\"Docker Swarm\"></p>\n<h1 id=\"создание-сети\" style=\"position:relative;\"><a href=\"#%D1%81%D0%BE%D0%B7%D0%B4%D0%B0%D0%BD%D0%B8%D0%B5-%D1%81%D0%B5%D1%82%D0%B8\" aria-label=\"создание сети permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Создание сети</h1>\n<p>Первым делом необходимо создать docker network, для обеспечения безопасности. Для того, чтобы предоставить внутри нее\nвсе необходимые метрики для datadog-agent, но не отдавать их наружу. </p>\n<h2 id=\"network-docker-compose\" style=\"position:relative;\"><a href=\"#network-docker-compose\" aria-label=\"network docker compose permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Network: Docker Compose</h2>\n<p>Докер рекомендует использовать <a href=\"https://tproger.ru/translations/imperative-declarative-programming-concepts/\">декларативный подход</a>\nвместо императивного и предлагает для этого использовать инструмент Docker Compose, при помощи которого можно описать\nнужные сервисы в файле docker-compose.yaml. Если вы используете Docker Compose, то описание сети будет выглядеть вот так:</p>\n<pre><code>datadog-agent:\n    driver: overlay\n    attachable: true\n    driver_opts:\n      encrypted: \"true\"\n    ipam:\n      config:\n        - subnet: 172.25.0.0/24\n</code></pre>\n<p>В таком случае, при поднятии сервисов, сеть будет создана автоматически</p>\n<p>Здесь мы говорим, что сеть будет работать между несколькими docker-демонами (<code>driver: overlay</code>), к ней можно будет\nвручную подключать контейнеры (<code>attachable: true</code>), трафик в\nсети зашифрован (<code>encrypted: true</code>) и для удобства указываем диапазон подсети</p>\n<p>Более подробную информацию можно найти в <a href=\"https://docs.docker.com/network/\">официальной документации</a> или в <a href=\"https://linux-notes.org/rabota-s-setju-networking-v-docker/\">отличной\nстатье на русском</a></p>\n<blockquote>\n<p>Стоит обратить внимание, что параметр gateway <a href=\"https://docs.docker.com/compose/compose-file/#ipam\">поддерживается</a>\nтолько в docker-compose версии 2, потому в данном примере опущен.</p>\n</blockquote>\n<h2 id=\"network-docker\" style=\"position:relative;\"><a href=\"#network-docker\" aria-label=\"network docker permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Network: Docker</h2>\n<p>Однако если по какой-то причине необходимо поднять сеть вручную, например, для теста или экономии ресурсов (мало ли), команда будет выглядеть так:</p>\n<pre><code>docker network create \\\n    --driver=overlay \\\n    --attachable \\\n    --scope=swarm \\\n    --opt encrypted \\\n    --subnet=172.25.0.0/24 \\\n    --gateway=172.25.0.10 \\\n    datadog-agent\n</code></pre>\n<p><em>Небольшое отступление:</em></p>\n<p>Зачастую на серверах можно встретить следующую команду в кроне, предназначенную для авто-удаления ненужных контейнеров:</p>\n<pre><code>docker system prune -a --force\n</code></pre>\n<p>Чтобы она не удалила нашу сеть, можно реализовать такой <em>workaround</em> и попросить её не удалять контейнеры, с <code>label=persist</code>:</p>\n<pre><code>docker system prune -a --force --filter \"label!=persist\"\n</code></pre>\n<p>и укажем соответствующий label для нашей сети:</p>\n<pre><code>docker network create \\\n    --driver=overlay \\\n    --attachable \\\n    --scope=swarm \\\n    --opt encrypted \\\n    --subnet=172.25.0.0/24 \\\n    --gateway=172.25.0.10 \\\n    datadog-agent \\\n    --label=persist\n</code></pre>\n<p>Если мы хотим, чтобы сервисы, описанные в docker-compose файле могли использовать созданную сеть, опишем её,\nкак ссылку на внешнюю для docker compose сеть:</p>\n<pre><code>networks:\n  agent:\n    external:\n      name: datadog-agent\n</code></pre>\n<p>В таком случае описывать настройки сети не нужно — внешняя сеть будет использована “как есть”</p>\n<h2 id=\"использование-сети\" style=\"position:relative;\"><a href=\"#%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5-%D1%81%D0%B5%D1%82%D0%B8\" aria-label=\"использование сети permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Использование сети</h2>\n<p>Укажем в файле docker-compose, чтобы сервис использовал сеть:</p>\n<pre><code>services:\n    some_service:\n        ...\n        network:\n            - datadog-agent\n</code></pre>\n<p>По умолчанию, docker использует для контейнеров\n<a href=\"https://docs.docker.com/engine/tutorials/networkingcontainers/#launch-a-container-on-the-default-network\">служебную сеть bridge</a>,\nесли не указано иное. Потому, если необходимо, стоит также явно указать использование сети по умолчанию: </p>\n<pre><code>services:\n    some_service:\n        ...\n        network:\n            - bridge\n            - datadog-agent\n</code></pre>\n<p>Для поиска проблем может помочь <a href=\"https://docs.docker.com/engine/reference/commandline/inspect/\">команда</a>:</p>\n<pre><code>docker inspect &#x3C;NAME|ID>\n</code></pre>\n<p>которая возвращает полную информацию о любом объекте, созданном докером. В нашем случае, мы можем посмотреть,\nкакие сети использует контейнер или какие контейнеры подключены к определенной сети</p>\n<h2 id=\"резолвинг-внутри-сети\" style=\"position:relative;\"><a href=\"#%D1%80%D0%B5%D0%B7%D0%BE%D0%BB%D0%B2%D0%B8%D0%BD%D0%B3-%D0%B2%D0%BD%D1%83%D1%82%D1%80%D0%B8-%D1%81%D0%B5%D1%82%D0%B8\" aria-label=\"резолвинг внутри сети permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Резолвинг внутри сети</h2>\n<p>Внутри сети сервисы докера резолвятся по <a href=\"https://docs.docker.com/network/overlay/\">имени сервиса</a></p>\n<p>Потому можно обращаться к нужному сервису можно просто <code>http://{service-name}/</code></p>\n<p>Получить список сервисов можно так: </p>\n<pre><code>docker service ls\n</code></pre>\n<p>Имена сервисов могут варьироваться в зависимости от настроек вашей системы. Например, при настройке CI/CD\nдля дев-окружения, в имя сервиса может быть добавлено имя ветки</p>\n<p>Например, при деплое <a href=\"https://docs.docker.com/engine/reference/commandline/stack_deploy/\">стека сервисов в swarm-режиме</a>,\nк имени сервиса будет добавлено имя стека: <code>&#x3C;STACK_NAME>_&#x3C;SERVICE_NAME></code></p>\n<p>Проверим:</p>\n<p><img src=\"/media/2020-08-22-create-docker-swarm-network-for-datadog/docker-swarm-network-check.png\" alt=\"Docker Swarm Network Check\" title=\"Docker Swarm Network Check\"></p>\n<p>Теперь, если мы из одного сервиса обращаемся к другому, будет использована наша только что созданная сеть</p>\n<hr>\n<p>Следующая статья <a href=\"/posts/connect-datadog-apm-to-docker-swarm\">Настраиваем Datadog APM в сети Docker Swarm</a></p>\n<hr>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://habr.com/ru/post/334004/\">Сети Docker изнутри: связь между контейнерами в Docker Swarm и Overlay-сети</a></li>\n<li><a href=\"https://linux-notes.org/nastrojka-docker-swarm-klastera-v-unix-linux/\">Настройка docker swarm кластера в Unix/Linux</a></li>\n<li><a href=\"https://dker.ru/docs/docker-engine/learn-by-example/network-containers/\">Сетевые контейнеры</a></li>\n</ul>\n<h2 id=\"полезные-ссылки-по-теме-docker-swarm\" style=\"position:relative;\"><a href=\"#%D0%BF%D0%BE%D0%BB%D0%B5%D0%B7%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8-%D0%BF%D0%BE-%D1%82%D0%B5%D0%BC%D0%B5-docker-swarm\" aria-label=\"полезные ссылки по теме docker swarm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Полезные ссылки по теме Docker Swarm</h2>\n<p><a href=\"https://soar.name/ru/pro/half-a-year-with-docker-swarm-mode-in-production/\">Полгода с Docker Swarm Mode в production</a>\n<a href=\"https://habr.com/ru/post/489750/\">Управление кластером Docker Swarm с помощью Swarmpit</a></p>","fields":{"slug":"/posts/create-docker-network-for-datadog","categorySlug":"/category/recipes","tagSlugs":["/tag/datadog","/tag/devops","/tag/ubuntu","/tag/php","/tag/php-fpm","/tag/nginx","/tag/infrastructure","/tag/docker","/tag/docker swarm"]},"frontmatter":{"title":"Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере Datadog","date":"2020-08-22T21:35:00.000Z","tags":["datadog","devops","ubuntu","php","php-fpm","nginx","infrastructure","docker","docker swarm"],"category":"recipes","description":"Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog. ","priority":0}}},{"node":{"html":"<h3 id=\"в-данной-статье-мы-рассмотрим-принципы-onion-architecture-onion-architecture-это-методология-построения-приложений\" style=\"position:relative;\"><a href=\"#%D0%B2-%D0%B4%D0%B0%D0%BD%D0%BD%D0%BE%D0%B9-%D1%81%D1%82%D0%B0%D1%82%D1%8C%D0%B5-%D0%BC%D1%8B-%D1%80%D0%B0%D1%81%D1%81%D0%BC%D0%BE%D1%82%D1%80%D0%B8%D0%BC-%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF%D1%8B-onion-architecture-onion-architecture-%D1%8D%D1%82%D0%BE-%D0%BC%D0%B5%D1%82%D0%BE%D0%B4%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D1%8F-%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B9\" aria-label=\"в данной статье мы рассмотрим принципы onion architecture onion architecture это методология построения приложений permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>В данной статье мы рассмотрим принципы Onion Architecture. Onion Architecture это методология построения приложений,</h3>\n<h3 id=\"построенная-на-принципах-solid-она-актино-использует-инверсию-управления-испытала-влияние-приципов-ddd-и-немного-взяла-из-функционального-программирования\" style=\"position:relative;\"><a href=\"#%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%BD%D0%B0%D1%8F-%D0%BD%D0%B0-%D0%BF%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF%D0%B0%D1%85-solid-%D0%BE%D0%BD%D0%B0-%D0%B0%D0%BA%D1%82%D0%B8%D0%BD%D0%BE-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B5%D1%82-%D0%B8%D0%BD%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D1%8E-%D1%83%D0%BF%D1%80%D0%B0%D0%B2%D0%BB%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B8%D1%81%D0%BF%D1%8B%D1%82%D0%B0%D0%BB%D0%B0-%D0%B2%D0%BB%D0%B8%D1%8F%D0%BD%D0%B8%D0%B5-%D0%BF%D1%80%D0%B8%D1%86%D0%B8%D0%BF%D0%BE%D0%B2-ddd-%D0%B8-%D0%BD%D0%B5%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%B2%D0%B7%D1%8F%D0%BB%D0%B0-%D0%B8%D0%B7-%D1%84%D1%83%D0%BD%D0%BA%D1%86%D0%B8%D0%BE%D0%BD%D0%B0%D0%BB%D1%8C%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F\" aria-label=\"построенная на принципах solid она актино использует инверсию управления испытала влияние приципов ddd и немного взяла из функционального программирования permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>построенная на принципах Solid. Она актино использует Инверсию Управления, испытала влияние приципов DDD и немного взяла из функционального программирования.</h3>\n<hr>\n<p><em>Перевод статьи <a href=\"https://dev.to/remojansen/implementing-the-onion-architecture-in-nodejs-with-typescript-and-inversifyjs-10ad\">Implementing SOLID and the onion architecture in Node.js with TypeScript and InversifyJS</a> от <a href=\"http://twitter.com/RemoHJansen\">Remo H. Jansen</a> 10 апреля 2018</em></p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/01.jpg\" alt=\"Onion Architecture\" title=\"Onion Architecture\"></p>\n<h2 id=\"предпосылка\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%B5%D0%B4%D0%BF%D0%BE%D1%81%D1%8B%D0%BB%D0%BA%D0%B0\" aria-label=\"предпосылка permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ПРЕДПОСЫЛКА</h2>\n<p>Следующая часть посвящена некоторым принципам и шаблонам проектирования, в которых нам нужно разобраться, чтобы понять\nOnion Architecture.</p>\n<h1 id=\"the-separation-of-concerns-soc-principle\" style=\"position:relative;\"><a href=\"#the-separation-of-concerns-soc-principle\" aria-label=\"the separation of concerns soc principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%BE%D1%82%D0%B2%D0%B5%D1%82%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B8\">THE SEPARATION OF CONCERNS (SOC) PRINCIPLE</a></h1>\n<p><em>Concerns</em> - это различные функциональные части приложения. Например <a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%B8%D0%B7%D0%BD%D0%B5%D1%81-%D0%BB%D0%BE%D0%B3%D0%B8%D0%BA%D0%B0\"><em>бизнес логика</em></a> приложения это <em>concern</em>, и интерфейс, при помощи которого пользователь обращается к <em>этой бизнес</em> логике - тоже <em>concern</em>.</p>\n<p>Благодаря <em>separation of concerns</em>, код этих различных concern’ов находится в различных местах. Изменение интерфейса\nдолжно быть возможно без изменения кода <em>бизнес логики</em>.</p>\n<h1 id=\"the-solid-principles\" style=\"position:relative;\"><a href=\"#the-solid-principles\" aria-label=\"the solid principles permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><a href=\"https://ru.wikipedia.org/wiki/SOLID_(%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)\">THE SOLID PRINCIPLES</a></h1>\n<p>SOLID - это акроним для следующих принципов:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/02.png\" alt=\"SOLID\" title=\"SOLID\"></p>\n<h2 id=\"single-responsibility-principle\" style=\"position:relative;\"><a href=\"#single-responsibility-principle\" aria-label=\"single responsibility principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SINGLE RESPONSIBILITY PRINCIPLE</h2>\n<p>Класс должен иметь только одну ответственность</p>\n<p>Самый эффектиный способ испортить приложение - создать <a href=\"https://ru.wikipedia.org/wiki/%D0%91%D0%BE%D0%B6%D0%B5%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9_%D0%BE%D0%B1%D1%8A%D0%B5%D0%BA%D1%82\"><em>God Class</em></a>.</p>\n<p><em>God Class</em> - это класс, который знает или делает слишком много. God Object - яркий пример анти-паттерна</p>\n<p><em>God Class</em> манипулирует большим количеством информации и имеет множество ответственностей. Небольшое изменение кода\nможет затронуть функциональность других частей класса и, как следствие, функциональность других классов, использующих\nданный класс, что приводит к большим проблемам при поддержке кода. Становится проще добавлять новый код, нежели,\nредактировать старый, что в свою очередь приводит к еще большему хаосу.</p>\n<p>В данном примере приведен код класса на Typescript, описывающего персону. Данный класс не должен содержать валидацию\nemail, потому что это не относится к поведению персоны:</p>\n<pre><code class=\"language-typescript\">class Person {\n  public name : string;\n  public surname : string;\n  public email : string;\n \n  constructor(name : string, surname : string, email : string) {\n    this.surname = surname;\n    this.name = name;\n\n    if(this.validateEmail(email)) {\n      this.email = email;\n    } else {\n      throw new Error(\"Invalid email!\");\n    }\n  }\n\n  validateEmail(email : string) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n   \n    return re.test(email);\n  }\n\n  greet() {\n    alert(\"Hi!\");\n  }\n}\n</code></pre>\n<p>Мы можем отрефакторить этот класс и удалить ответственность за валидацию email из персоны и создать для этого отдельный класс Email:</p>\n<pre><code class=\"language-typescript\">class Email {\n  public email : string;\n\n  constructor(email : string){\n    if(this.validateEmail(email)) {\n      this.email = email;\n    } else {\n      throw new Error(\"Invalid email!\");\n    }\n  }\n\n  validateEmail(email : string) {\n    var re = /^([\\w-]+(?:\\.[\\w-]+)*)@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$/i;\n    return re.test(email);\n  }\n}\n\nclass Person {\n  public name : string;\n  public surname : string;\n  public email : Email;\n\n  constructor(name : string, surname : string, email : Email){\n    this.email = email;\n    this.name = name;\n    this.surname = surname;\n  }\n\n  greet() {\n    alert(\"Hi!\");\n  }\n}\n</code></pre>\n<p>Если класс имеет всего одну ответственность, становится гораздо проще понять, что он делает и как можно его расширить\nили улучшить.</p>\n<h2 id=\"openclose-principle\" style=\"position:relative;\"><a href=\"#openclose-principle\" aria-label=\"openclose principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>OPEN/CLOSE PRINCIPLE</h2>\n<p>Сущности должны быть открыты для расширения, но закрыты для изменения</p>\n<p>В данном листинге мы видем пример кода, который не следует <em>open/close principle</em>:</p>\n<pre><code class=\"language-typescript\">class Rectangle {\n  public width: number;\n  public height: number;\n}\n\nclass Circle {\n  public radius: number;\n}\n\nfunction getArea(shapes: (Rectangle|Circle)[]) {\n  return shapes.reduce(\n    (previous, current) => {\n      if (current instanceof Rectangle) {\n        return current.width * current.height;\n      } else if (current instanceof Circle) {\n        return current.radius * current.radius * Math.PI;\n      } else {\n        throw new Error(\"Unknown shape!\")\n      }\n    },\n    0\n  );\n}\n</code></pre>\n<p>Данный код позволяет нам вычислить площать двух фигур (Rectangle и Circle). Если мы захотим добавить поддержку другого\nтипа фигур, нам будет необходимо расширить наш код. Мы можем просто добавить поддержку нового типа фигуры (наше\nприложение открыто для расширения), однако, проблема в том, что чтобы это сделать, нам нужно отредактировать функцию\ngetArea, что обозначает, что наше приложение также открыто для модификации.</p>\n<p>Решение данной проблемы в использовании преимуществ полиморфизма, как показано в примере ниже:</p>\n<pre><code class=\"language-typescript\">interface Shape {\n  area(): number;\n}\n\nclass Rectangle implements Shape {\n  public width: number;\n  public height: number;\n\n  public area() {\n    return this.width * this.height;\n  }\n}\n\nclass Circle implements Shape {\n  public radius: number;\n\n  public area() {\n    return this.radius * this.radius * Math.PI;\n  }\n}\n\nfunction getArea(shapes: Shape[]) {\n  return shapes.reduce(\n    (previous, current) => previous + current.area(),\n    0\n  );\n}\n</code></pre>\n<p>Данное решение позволяет нам добавлять новые типы фигур (открыто для расширения) без редактирования существующего кода\n(закрыто для модификации).</p>\n<h2 id=\"liskov-substitution-principle\" style=\"position:relative;\"><a href=\"#liskov-substitution-principle\" aria-label=\"liskov substitution principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>LISKOV SUBSTITUTION PRINCIPLE</h2>\n<p>Должна быть возможность заменить любой объект его потомком, не нарушая корректность работы программы.</p>\n<p><em>Liskov substitution principle</em> также предлагает нам использовать преимущества полиморфизма. Например, в данном коде:</p>\n<pre><code class=\"language-typescript\">function getArea(shapes: Shape[]) {\n  return shapes.reduce(\n    (previous, current) => previous + current.area(),\n    0\n  );\n}\n</code></pre>\n<p>Мы использовали интерфейс Shape, чтобы удостовериться, что наша программа открыта для расширения, но закрыта для\nмодификации. <em>Liskov substitution principle</em> обозначает, что мы можем передать любой объект, имплементирующий интерфейс\nShape в функцию getArea и это никак не повлияет на корректность работы программы. В языках со статической типизацией,\nнапример, в Typescript, компилятор проверит за нас корректность имплементации интерфейса (например, если в классе,\nимплементирующем интерфейс Shape будет пропущен метод area, то компиляция завершится с ошибкой). Это обозначает, что\nнам не нужно что-либо проверять вручную, чтобы удостовериться, что приложение следует <em>Liskov substitution principle</em>.</p>\n<h2 id=\"interface-segregation-principle\" style=\"position:relative;\"><a href=\"#interface-segregation-principle\" aria-label=\"interface segregation principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INTERFACE SEGREGATION PRINCIPLE</h2>\n<p>Много небольших специфичных интерфейсов лучше, чем один большой общего назначения.</p>\n<p>Interface segregation principle предостерегает нас от нарушения single responsibility principle и separation of\nconcerns principle.</p>\n<p>Давайте представим, что у нас есть две доменные сущности: Rectangle и Circle. Вы использовали эти сущности в ваших\nдоменных сервисах, чтобы посчитать их площадь. Все было прекрасно, но теперь вам необходимо реализовать возможность\nих сериализации в одном из <em>infrastructure layer</em>. Мы можем решить проблему, добавив новый метод в интерфейс Shape:</p>\n<pre><code class=\"language-typescript\">interface Shape {\n  area(): number;\n  serialize(): string;\n}\n\nclass Rectangle implements Shape {\n\n  public width: number;\n  public height: number;\n\n  public area() {\n    return this.width * this.height;\n  }\n\n  public serialize() {\n    return JSON.stringify(this);\n  }\n}\n\nclass Circle implements Shape {\n\n  public radius: number;\n\n  public area() {\n    return this.radius * this.radius * Math.PI;\n  }\n\n  public serialize() {\n    return JSON.stringify(this);\n  }\n}\n</code></pre>\n<p>Нашему <em>domain layer</em> нужен метод area (из интерфейса Shape), но он не должен ничего знать о сериализации:</p>\n<pre><code class=\"language-typescript\">function getArea(shapes: Shape[]) {\n  return shapes.reduce(\n    (previous, current) => previous + current.area(),\n    0\n  );\n}\n</code></pre>\n<p>Нашему <em>infrastructure layer</em> нужен метод serialize (из интерфейса Shape), но он не должен ничего знать об area:</p>\n<pre><code class=\"language-typescript\">// ...\nreturn rectangle.serialize();\n</code></pre>\n<p>Проблема в том, что добавляя метод Serialize в интерфейс Shape мы нарушаем <em>separation of concerns principle</em> и\n<em>single responsibility principle</em>. Shape - сущность business layer, а возможность быть сериализованным - сущность\n<em>infrastructure layer</em>. Мы не должны смешивать эти два concern’а в одном интерфейсе.</p>\n<p><em>Interface segregation</em> говорит, что много небольших интерфейсов лучше, чем один большой, а это значит, что мы\nдолжны разделить наши интерфейсы:</p>\n<pre><code class=\"language-typescript\">interface RectangleInterface {\n  width: number;\n  height: number;\n}\n\ninterface CircleInterface {\n  radius: number;\n}\n\ninterface Shape {\n  area(): number;\n}\n\ninterface Serializable {\n  serialize(): string;\n}\n</code></pre>\n<p>При помощи наших новых интерфейсов, мы можем полностью изолировать наш доменный слой от такой инфраструктурной\nлогики, как сериализация:</p>\n<pre><code class=\"language-typescript\">class Rectangle implements RectangleInterface, Shape {\n\n  public width: number;\n  public height: number;\n\n  public area() {\n    return this.width * this.height;\n  }\n}\n\nclass Circle implements CircleInterface, Shape {\n\n  public radius: number;\n\n  public area() {\n    return this.radius * this.radius * Math.PI;\n  }\n}\n\nfunction getArea(shapes: Shape[]) {\n  return shapes.reduce(\n    (previous, current) => previous + current.area(),\n    0\n  );\n}\n</code></pre>\n<p>В инфраструктурном слое мы можем использовать новый набор сущностей, которые работают с сериализацией:</p>\n<pre><code class=\"language-typescript\">class RectangleDTO implements RectangleInterface, Serializable {\n\n  public width: number;\n  public height: number;\n\n  public serialize() {\n    return JSON.stringify(this);\n  }\n}\n\nclass CircleDTO implements CircleInterface, Serializable {\n\n  public radius: number;\n\n  public serialize() {\n    return JSON.stringify(this);\n  }\n}\n</code></pre>\n<p>Разбиение одного интерфейса общего назначения на множетсво специфичных позволяет нам предотвратить нарушение принципа\n<em>separation of concerns principle</em> (<em>business layer</em> ничего не знает о сериализации) и <em>single responsibility principle</em>\n(у нас нет <em>God Class</em>, который знает и о сериализации и о вычислении площади).</p>\n<p>С другой стороны, можно сказать, что классы RectangleDTO и Rectangle почти идентичны и это нарушает принцип <a href=\"https://ru.wikipedia.org/wiki/Don%E2%80%99t_repeat_yourself\">DRY</a>.\nНо, я так не думаю, потому что, хоть они и выглядят похоже, но относятся к разным Concern’ам. Когда два куска кода\nпохожи, это не всегда обозначает, что они выполняют одни и те же задачи.</p>\n<p>Однако, даже если принцип DRY все же нарушен, то нам приходится выбирать между принципами DRY и SOLID. И мне кажется,\nчто принцип DRY менее важен и ради принципов <em>SOLID</em> я готов “Repeat Myself”.</p>\n<h2 id=\"dependency-inversion-principle\" style=\"position:relative;\"><a href=\"#dependency-inversion-principle\" aria-label=\"dependency inversion principle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>DEPENDENCY INVERSION PRINCIPLE</h2>\n<p>Код должен зависеть от абстракций, а не от реализаций</p>\n<p>Dependency inversion principle говорит нам, что наш код всегда должен зависеть от интерфейсов, а не от классов.</p>\n<p>Важно понимать, что <em>Dependency inversion</em> и <em>Dependency injection</em> это не одно и то же.</p>\n<p>К сожалению, <em>dependency inversion principle</em> представлен буквой D в SOLID. Этот принцип идет последним, однако,\nявляется самым важным принципом в <em>SOLID</em>. Без <em>dependency inversion principle</em> другие принципы <em>SOLID</em> неосуществимы.</p>\n<p>Если мы вернемся назад и посмотрим на предыдущие принципы, станет очевидно, что использование интерфейсов - одно\nиз основных правил:</p>\n<ul>\n<li>Зависимость от интерфейсов, что следует из <em>interface segregation principle</em>, позволяет нам изолировать слой от деталей\nреализации другого слоя (<em>separation of concerns principle</em>) и позволяет предотвратить нарушение\n<em>single responsibility principle</em></li>\n<li>Зависимость от интерфейса также позволяет нам заменить одну реализацию другой (<em>Liskov substitution principle</em>)</li>\n<li>Зависимость от интерфейса позволяет нам писать приложения, которые открыты для расширения, но закрыты для\nмодификации (<em>Open/close principle</em>).\nСледование принципам SOLID в языке программирования, который не поддерживает интерфейсы или следует парадигме,\nкоторая не поддерживает полиморфизм, выглядит достаточно неестестенно. К таким языкам относятся ES5 и ES6.\nНо, к счастью, следовать принципам SOLID достаточно легко в Typescript.</li>\n</ul>\n<h1 id=\"the-model-view-controller-mvc-design-pattern\" style=\"position:relative;\"><a href=\"#the-model-view-controller-mvc-design-pattern\" aria-label=\"the model view controller mvc design pattern permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>THE MODEL-VIEW-CONTROLLER (MVC) DESIGN PATTERN</h1>\n<p>Паттерн проектирования MVC разделяет приложение на три основных части: <em>Модель</em>, <em>Представление</em> и <em>Контроллер</em>.</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/03.png\" alt=\"MVC\" title=\"MVC\"></p>\n<h2 id=\"model\" style=\"position:relative;\"><a href=\"#model\" aria-label=\"model permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MODEL</h2>\n<p>Объекты модели это часть приложения, отвечающая за логику доменных данных. Зачастую, объекты модели отвечают за\nполучение и сохранение состояния модели в базе данных. Например, объект Product может доставать информацию из базы,\nобновлять ее и потом записывать обновленную информацию обратно в таблицу Products в базы данных SQL.</p>\n<p>В небольших приложениях, модель зачастую является логической, а не физической сущностью. Например, если приложение\nтолько считывает набор данных и отправляет их в представление, приложение не имеет слоя моделей и соответствующих\nклассов. В таком случае, набор данных берет на себя роль модели.</p>\n<h2 id=\"view\" style=\"position:relative;\"><a href=\"#view\" aria-label=\"view permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VIEW</h2>\n<p>Представления это компоненты, которые отображают пользовательский интерфейс приложения. Как правило, пользовательский\nинтерфейс пострен на основе данных модели.</p>\n<p>Например, форма редактирования таблицы Products, на которой могут быть текстовые поля, чекбоксы, селектбоксы,\nотображающие текущее состояние объекта Product.</p>\n<h2 id=\"controller\" style=\"position:relative;\"><a href=\"#controller\" aria-label=\"controller permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CONTROLLER</h2>\n<p>Контроллеры это компоненты, ответственные за обработку действий пользователя, работу с моделями и выбор представления\nдля отображения пользовательского интерфейса. В MVC приложении представление ответственно только за отображение\nинформации; контроллеры обрабатывают и отвечают на пользовательские действия. Например, контроллер обрабатывает\nзначения из адресной строки и передает эти значения в модель, которая может использовать эти значения для составления\nзапроса в базу данных.</p>\n<p>MVC паттерн помогает создавать приложения с четко разделенными частями логики (логика ввода, бизнес логика, логика\nинтерфейса) без жесткой связи между этими частями. Паттерн определяет, где каждая часть логики должна быть размещена\nв приложении. Логика пользовательского интерфейса должна находиться в представлении. Логика взаимодействия с\nпользователем - в контроллере, Бизнес-логика - в модели. Такое разделение помогает управлять компонентностью, во\nвремя разработки приложения, потому как позволяет сконцентрироваться на определенной части логики отдельно. Например,\nвы можете сконцентрироваться на представлении, не беспокоясь о бизнес логике.</p>\n<p>Избавление от жесткой связи между этими частями приложения также упрощает параллельную разработку. Например, один\nразработчик может работать над представлением, в то время, как другой будет занят логикой контроллера, а третий -\nбизнес логикой. Паттерн MVC - прекрасный пример разделения концернов ради упрощения поддержки приложения в будущем.</p>\n<h1 id=\"the-repository-and-the-data-mapper-design-patterns\" style=\"position:relative;\"><a href=\"#the-repository-and-the-data-mapper-design-patterns\" aria-label=\"the repository and the data mapper design patterns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>THE REPOSITORY AND THE DATA MAPPER DESIGN PATTERNS</h1>\n<p>Паттерн MVC позволяет нам разделить логику взаимодействия с пользователем, логику интерфейса и бизнес логику.\nОднако модель имеет слишком много ответственности. Мы можем использовать паттерн <em>repository</em>, чтобы разделить\nлогику взаимодействия с хранилищем данных и логику манипуляции с данными. Слой бизнес логики не должен что-либо\nзнать о том, как эти данные хранятся. Например, мы можем хранить данные в базе данных, статическом файле или\nвеб сервисе.</p>\n<p>Репозиторий связывает слой доступа к данным и слой бизнес логики приложения. Он запрашивает данные из хранилища,\nпреобразовывает данные в бизнес сущности и сохраняет изменения бизнес сущности в хранилище. Репозиторий отделяет\nбизнес логику от взаимодействия с хранилищем данных. Такое разделение дает следующие преимущества:</p>\n<ul>\n<li>позволяет хранить всю логику работы с хранилищем данных в отдельном месте</li>\n<li>облегчает юнит-тестирование</li>\n<li>помогает построить гибкую, адаптируемую, масштабируемую архитектуру</li>\n</ul>\n<p>Репозиторий запрашивает данные для нужд пользователей и возвращает соответствующие результатам наборы бизнес сущностей.\nРепозиторий также сохраняет в хранилище добавленные или измененные бизнес сущности. Данная диаграмма изображает\nвзаимодействие репозитория с клиентом и источником данных.</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/04.png\" alt=\"DATA MAPPER\" title=\"DATA MAPPER\"></p>\n<p>Репозитории являются мостами между данными и операциями над данными, которые находятся на разных слоях приложения.\nВ обязанности репозитория также входит конвертация данных из формата, в котором данные хранятся в хранилище в формат\nдоменных сущностей. Зачастую, для этой конвертации используется паттерн <em>Data Mapper</em>.</p>\n<p>Репозиторий убирает жесткую зависимость от используемых технологий хранения данных. Например, если нам нужно получить\nнекоторые данные о продуктах, мы просто обратимся к интерфейсу репозитория и он вернет нам запрашиваемые доменные\nсущности. Нам нет необходимости знать, как именно хранятся данные: в SQL базе данных или, например в SharePoint CAML.\nПодобная изоляция существенно облегчает масштабирование приложения.</p>\n<h1 id=\"the-onion-architecture\" style=\"position:relative;\"><a href=\"#the-onion-architecture\" aria-label=\"the onion architecture permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>THE ONION ARCHITECTURE</h1>\n<p>Onion architecture разбивает приложение на слои (похоже на луковицу):</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/05.png\" alt=\"Onion architecture\" title=\"Onion architecture\"></p>\n<p>Центральный слой - доменная модель. Вокруг нее расположены доменные сервисы, сервисы приложения и, на внешнем слое,\nтесты, инфраструктура и пользовательский интерфейс.</p>\n<p>В <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\">DDD</a>\n(<em>Domain Driven Development</em>) в центре всего находится т.н. ”<em>Domain</em>”. Домен состоит из двух компонентов:</p>\n<ul>\n<li>Доменная модель</li>\n<li>Доменные сервисы</li>\n</ul>\n<p>В функциональном программировании, один из основных архитектурных принципов заключается в том, чтобы помещать\n<a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D0%BE%D0%B1%D0%BE%D1%87%D0%BD%D1%8B%D0%B9_%D1%8D%D1%84%D1%84%D0%B5%D0%BA%D1%82_(%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5)\"><em>side-effects</em></a>\nна границах приложения. <em>Onion architecture</em> также следует этому принципу. Ядро приложения (доменные\nсервисы и доменные модели) должны быть отделены от <em>side-effect</em>‘ов и прочих деталей реализации. То есть, в ядре\nприложения не должно быть никаких ссылок, например, на реализацию хранилища данных (SQL) или транспорта данных (HTTP).</p>\n<p>Доменные модели и доменные сервисы не знают ничего о базах данных, протоколах, кеше и других специфичных для\nприложения решениях. Ядро приложения отвечает только за бизнес логику. Внешние слои приложения (<em>infrastructure,\ntest</em> и <em>user interface</em>) отвечают за взаимодействие с ресурсами (сеть, хранилище) и могут содержать и изолировать от\nядра <em>side-effect</em>‘ов.</p>\n<p>Такое разделение слоев достигается путем использования интерфейсов и следования <em>dependency inversion principle</em>:\nкомпонент должен зависеть от абстракций (интерфейсы), а не от реализаций (классы). Например, один из\nинфраструктурных слоев - слой HTTP полностью состоит из контроллеров. Контроллер AircraftController может\nзависеть от интерфейса AircraftRepository:</p>\n<pre><code class=\"language-typescript\">import { inject } from \"inversify\";\nimport { response, controller, httpGet } from \"inversify-express-utils\";\nimport * as express from \"express\";\nimport { AircraftRepository } from \"@domain/interfaces\";\nimport { Aircraft } from \"@domain/entitites/aircraft\";\nimport { TYPE } from \"@domain/types\";\n\n@controller(\"/api/v1/aircraft\")\nexport class AircraftController {\n\n    @inject(TYPE.AircraftRepository) private readonly _aircraftRepository: AircraftRepository;\n\n    @httpGet(\"/\")\n    public async get(@response() res: express.Response) {\n        try {\n            return await this._aircraftRepository.readAll();\n        } catch (e) {\n            res.status(500).send({ error: \"Internal server error\" });\n        }\n    }\n\n    // ...\n}\n</code></pre>\n<p>AircraftController является частью слоя инфраструктуры и его основная ответственность — взаимодействовать с HTTP\nи репозиторием AircraftRepository. AircraftRepository должен быть полностью изолирован от любой HTTP логики.\nС такой точкой зрения, наш граф зависимостей будет выглядеть так:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/06.png\" alt=\"AircraftRepository\" title=\"AircraftRepository\"></p>\n<p>Стрелочки на диаграмме имеют различное значение. Стрелочка “comp” обозначает, что AircraftRepository является\nсвойством AircraftController. Стрелочка “ref” обозначает, что AircraftController ссылается или зависит от Aircraft.</p>\n<p>Интерфейс AircraftRepository это часть <em>Domain Services</em>, в то время, как AircraftController и реализация\nAircraftRepository являются частью <em>Infrastructure Layer</em>:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/07.png\" alt=\"Onion architecture description\" title=\"Onion architecture description\"></p>\n<p>Это обозначает что один из внешних слоев (инфраструктурный) ссылается на один из внутренних (доменные сервисы).\nВ <em>Onion architecture</em> можно ссылаться только из внешних слоев во внутренние, но не в обратную сторону:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/08.png\" alt=\"Onion architecture flow\" title=\"Onion architecture flow\"></p>\n<p>Мы используем интерфейс AircraftRepository чтобы разделить слой домена от слоя инфраструктуры на этапе проектирования.\nОднако во время выполнения программы, эти два слоя должны как-то коммуникатировать. Эта коммуникация между\nинтерфейсами и реализациями управляется InversifyJS. InversifyJS позволяет нам объявлять инджектируемые\nзависимости при помощи декоратора @inject. На этапе проектирования мы можем объявить, что мы хотим использовать\nнужную реализацию для определенного интерфейса:</p>\n<pre><code class=\"language-typescript\">@inject(TYPE.AircraftRepository) private readonly _aircraftRepository: AircraftRepository;\n</code></pre>\n<p>Во время выполнения приложения, InversifyJS будет использовать данные настройки, чтобы инджектить нужную реализацию интерфейса:</p>\n<pre><code class=\"language-typescript\">container.bind&#x3C;AircraftRepository>(TYPE.AircraftRepository).to(AircraftRepositoryImpl);\n</code></pre>\n<p>Давайте посмотрим на AircratRepository и  Repository интерфейсы, которые являются частью слоя <em>Domain Services</em>.</p>\n<pre><code class=\"language-typescript\">import { Aircraft } from \"@domain/entitites/aircraft\";\n\nexport interface Repository&#x3C;T> {\n    readAll(): Promise&#x3C;T[]>;\n    readOneById(id: string): Promise&#x3C;T>;\n    // ...\n}\n\nexport interface AircraftRepository extends Repository&#x3C;Aircraft> {\n    // Add custom methods here ...\n}\n</code></pre>\n<p>На данный момент, граф зависимостей будет выглядеть следующим образом:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/09.png\" alt=\"Injections graph\" title=\"Injections graph\"></p>\n<p>Нам необходимо реализовать интерфейсы Repository и AircraftRepository:</p>\n<ul>\n<li>Repository реализуем классом GenericRepositoryImpl</li>\n<li>AircraftRepository реализуем классом AircraftRepositoryImpl</li>\n</ul>\n<p>Так будет выглядеть реализация Repository:</p>\n<pre><code class=\"language-typescript\">import { injectable, unmanaged } from \"inversify\";\nimport { Repository } from \"@domain/interfaces\";\nimport { EntityDataMapper } from \"@dal/interfaces\";\nimport { Repository as TypeOrmRepository } from \"typeorm\";\n\n@injectable()\nexport class GenericRepositoryImpl&#x3C;TDomainEntity, TDalEntity> implements Repository&#x3C;TDomainEntity> {\n\n    private readonly _repository: TypeOrmRepository&#x3C;TDalEntity>;\n    private readonly _dataMapper: EntityDataMapper&#x3C;TDomainEntity, TDalEntity>;\n\n    public constructor(\n        @unmanaged() repository: TypeOrmRepository&#x3C;TDalEntity>,\n        @unmanaged() dataMapper: EntityDataMapper&#x3C;TDomainEntity, TDalEntity>\n    ) {\n        this._repository = repository;\n        this._dataMapper = dataMapper;\n    }\n\n    public async readAll() {\n        const entities = await this._repository.readAll();\n        return entities.map((e) => this._dataMapper.toDomain(e));\n    }\n\n    public async readOneById(id: string) {\n        const entity = await this._repository.readOne({ id });\n        return this._dataMapper.toDomain(entity);\n    }\n\n    // ...\n}\n</code></pre>\n<p>Данная реализация принимает EntityDataMapper и TypeOrmRepository в конструкторе, чтобы в дальнейшем использовать их\nдля получения и преобразования данных из базы данных в доменные сущности.</p>\n<p>Нам также необходим интерфейс EntityDataMapper:</p>\n<pre><code class=\"language-typescript\">export interface EntityDataMapper&#x3C;Domain, Entity> {\n\n    toDomain(entity: Entity): Domain;\n    toDalEntity(domain: Domain): Entity;\n}\n</code></pre>\n<p>И его реализация:</p>\n<pre><code class=\"language-typescript\">import { toDateOrNull, toLocalDateOrNull } from \"@lib/universal/utils/date_utils\";\nimport { Aircraft } from \"@domain/entitites/aircraft\";\nimport { AircraftEntity } from \"@dal/entities/aircraft\";\nimport { EntityDataMapper } from \"@dal/interfaces\";\n\nexport class AircraftDataMapper implements EntityDataMapper&#x3C;Aircraft, AircraftEntity> {\n\n    public toDomain(entity: AircraftEntity): Aircraft {\n        // ...\n    }\n\n    public toDalEntity(mortgage: Aircraft): AircraftEntity {\n        // ...\n    }\n}\n</code></pre>\n<p>В нашем случае, EntityDataMapper преобразовывает данные полученные из TypeOrmRepository в доменные сущности.</p>\n<p>На данный момент, наш граф зависимостей будет выглядеть так:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/10.png\" alt=\"Injections graph 2\" title=\"Injections graph 2\"></p>\n<p>И наконец, давайте напишем реализацию AircraftRepository:</p>\n<pre><code class=\"language-typescript\">import { inject, injectable } from \"inversify\";\nimport { Repository as TypeOrmRepository } from \"typeorm\";\nimport { AircraftRepository } from \"@domain/interfaces\";\nimport { Aircraft } from \"@domain/entitites/aircraft\";\nimport { GenericRepositoryImpl } from \"@dal/generic_repository\";\nimport { AircraftEntity } from \"@dal/entities/aircraft\";\nimport { AircraftDataMapper } from \"@dal/data_mappers/aircraft\";\nimport { TYPE } from \"@dal/types\";\n\n@injectable()\nexport class AircraftRepositoryImpl\n    extends GenericRepositoryImpl&#x3C;Aircraft, AircraftEntity>\n    implements AircraftRepository {\n\n    public constructor(\n        @inject(TYPE.TypeOrmRepositoryOfAircraftEntity) repository: TypeOrmRepository&#x3C;AircraftEntity>\n    ) {\n        super(repository, new AircraftDataMapper())\n    }\n\n    // Add custom methods here ...\n\n}\n</code></pre>\n<p>И обновленный граф зависимостей будет таким:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/11.png\" alt=\"Injections graph 3\" title=\"Injections graph 3\"></p>\n<p>На данной диаграмме синим цветом выделены реализации, а желтым - абстракции.</p>\n<p>На диаграмме ниже, зеленым выделены компоненты слоя домена и синим - компоненты слоя инфраструктуры:</p>\n<p><img src=\"/media/2019-01-01-implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs/12.png\" alt=\"Injections graph 4\" title=\"Injections graph 4\"></p>\n<p>Я успешно использую эту архитектуру в больших интерпрайз приложениях на протяжении последних 10 лет.\nТакже можно разбивать большие слои на отдельные микросервисы. Решение, когда множество микросервисов реализуют\n<em>onion architecture</em>, я называю “мешок лука”.</p>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://github.com/stelltec/public-tech-demos/tree/master/nodejs-madrid-meetup/demo3\">Git репозиторий с примером простой реализации луковой архитектуры при помощи Typescript и InversifyJS</a></li>\n<li><a href=\"https://kristopher.codes/2013/07/04/implementing-the-onion-architecture-in-php/\">Реализация Onion Architecture на PHP</a></li>\n<li><a href=\"https://medium.com/@matthew.erskine/laravel-5-x-onion-architecture-c81a3d5918f2\">Реализация Onion Architecture при помощи Laravel</a></li>\n</ul>","fields":{"slug":"/posts/implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/onion architecture","/tag/ddd","/tag/solid","/tag/typescript","/tag/inversifyjs","/tag/nodejs","/tag/mvc"]},"frontmatter":{"title":"IMPLEMENTING SOLID AND THE ONION ARCHITECTURE IN NODE.JS WITH TYPESCRIPT AND INVERSIFYJS","date":"2019-01-01T16:28:32.000Z","tags":["the clean architecture","onion architecture","ddd","solid","typescript","inversifyjs","nodejs","mvc"],"category":"development","description":"В данной статье мы рассмотрим принципы Onion Architecture. Onion Architecture это методология построения приложений, построенная на принципах Solid. Она актино использует Инверсию Управления, испытала влияние приципов DDD и немного взяла из функционального программирования.","priority":5}}},{"node":{"html":"<h3 id=\"the-clean-architecture-описывает-основные-общие-правила-построения-архитектуры-приложения-как-сделать-разработку-тестируемой-удобной-понятной-а-части-системы-взаимозаменяемыми\" style=\"position:relative;\"><a href=\"#the-clean-architecture-%D0%BE%D0%BF%D0%B8%D1%81%D1%8B%D0%B2%D0%B0%D0%B5%D1%82-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D0%BE%D0%B1%D1%89%D0%B8%D0%B5-%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%B0-%D0%BF%D0%BE%D1%81%D1%82%D1%80%D0%BE%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D1%8B-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D1%8F-%D0%BA%D0%B0%D0%BA-%D1%81%D0%B4%D0%B5%D0%BB%D0%B0%D1%82%D1%8C-%D1%80%D0%B0%D0%B7%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%BA%D1%83-%D1%82%D0%B5%D1%81%D1%82%D0%B8%D1%80%D1%83%D0%B5%D0%BC%D0%BE%D0%B9-%D1%83%D0%B4%D0%BE%D0%B1%D0%BD%D0%BE%D0%B9-%D0%BF%D0%BE%D0%BD%D1%8F%D1%82%D0%BD%D0%BE%D0%B9-%D0%B0-%D1%87%D0%B0%D1%81%D1%82%D0%B8-%D1%81%D0%B8%D1%81%D1%82%D0%B5%D0%BC%D1%8B-%D0%B2%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B7%D0%B0%D0%BC%D0%B5%D0%BD%D1%8F%D0%B5%D0%BC%D1%8B%D0%BC%D0%B8\" aria-label=\"the clean architecture описывает основные общие правила построения архитектуры приложения как сделать разработку тестируемой удобной понятной а части системы взаимозаменяемыми permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Clean Architecture описывает основные общие правила построения архитектуры приложения. Как сделать разработку тестируемой, удобной, понятной, а части системы взаимозаменяемыми.</h3>\n<hr>\n<p><em>Перевод статьи <a href=\"https://8thlight.com/blog/uncle-bob/2012/08/13/the-clean-architecture.html\">The Clean Architecture</a> от <a href=\"https://blog.cleancoder.com/\">Robert Martin</a> 13 августа 2012.</em></p>\n<p><img src=\"/media/2018-08-15-the-clean-architecture/01.jpg\" alt=\"The Clean Architecture\" title=\"The Clean Architecture\"></p>\n<p>За последние несколько лет было предложено множество идей построения архитектуры.</p>\n<p>Например:</p>\n<ul>\n<li><a href=\"http://alistair.cockburn.us/Hexagonal+architecture\">Hexagonal Architecture</a> (или Ports and Adapters) от Alistair Cockburn адаптированная Steve Freeman и Nat Pryce в их замечательной книге <a href=\"http://www.amazon.com/Growing-Object-Oriented-Software-Guided-Tests/dp/0321503627\">Growing Object Oriented Software</a></li>\n<li><a href=\"http://jeffreypalermo.com/blog/the-onion-architecture-part-1/\">Onion Architecture</a> от Jeffrey Palermo</li>\n<li><a href=\"https://8thlight.com/blog/uncle-bob/2011/09/30/Screaming-Architecture.html\">Screaming Architecture</a> из блога Robert Martin</li>\n<li><a href=\"http://www.amazon.com/Lean-Architecture-Agile-Software-Development/dp/0470684208/\">DCI</a> от James Coplien и Trygve Reenskaug.</li>\n<li><a href=\"http://www.amazon.com/Object-Oriented-Software-Engineering-Approach/dp/0201544350\">BCE</a> от Ivar Jacobson из его книги Object Oriented Software Engineering: A Use-Case Driven Approach</li>\n</ul>\n<p>Несмотря на то, что детали, предложенные в этих архитектурах сильно варьируются, все же, они очень похожи.</p>\n<p>Все они разбивают проблему на схожие задачи. Они все добиваются этого разделения разложением кода на слои. Каждая имеет как минимум один слой для бизнес логики и другой - для интерфейсов.</p>\n<p>Каждая из этих архитектур создает систему, которая:</p>\n<ol>\n<li>Независимость от фреймворка. Архитектура не должна зависеть от какого-либо фреймворка или библиотеки, релиазующей какую-либо фичу. Такой подход позволяет использовать фреймворки как инструмент, нежели, подгонять ваш код под возможности фреймворка.</li>\n<li>Тестируемость. Бизнес-логика должна быть тестируема без UI, баз данных, веб-сервисов и прочих сторонник элементов.</li>\n<li>Независимость от UI. Должна быть возможность легко изменить UI без затрагивания других частей системы. Веб интерфейс может быть заменен на консольный без изменения бизнес-логики.</li>\n<li>Независимость от Базы Данных. Должна быть возможность заменить Oracle ил SQL Server на Mongo, BigTable, CouchDB или что-либо еще. Бизнес-логика не зависит от Базы Данных</li>\n<li>Независимость от внешних сервисов. Бизнес-логика просто не знает о существовании чего-либо во внешнем мире.</li>\n</ol>\n<p>На диаграме представлена попытка изобразить общую концепцию представленных архитектур.</p>\n<h1 id=\"правило-зависимости-dependency-rule\" style=\"position:relative;\"><a href=\"#%D0%BF%D1%80%D0%B0%D0%B2%D0%B8%D0%BB%D0%BE-%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B8-dependency-rule\" aria-label=\"правило зависимости dependency rule permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ПРАВИЛО ЗАВИСИМОСТИ (DEPENDENCY RULE)</h1>\n<p>Каждый слой на диаграме представляет разный слой кода. В целом, чем глубже вы двигаетесь внутрь диаграмы, тем на более высокий уровень абстракции попадаете. Внешние слои это реализация, внутренние - правила.</p>\n<p>Основное правило, благодаря которому эта архитектура работает - Правило Зависимости. Правило звучит так: внешние слои знают о внутренних, но не наоборот. Ничего из внутреннего слоя не должно знать о существовании внешнего. В частности, имена, объявленные во внешних слоях не должны даже упоминаться во внутренних. Это касается функций, классов, переменных и любых других сущностей.</p>\n<p>Точно также, форматы данных, используемые во внешних слоях не должны быть использованы где-либо во внутренних слоях. Особенно, если эти данные сгенерированы фреймворком, используемым во внешних слоях. Мы не хотим никаким образом влиять на внутренние слои из внешних.</p>\n<h1 id=\"слои\" style=\"position:relative;\"><a href=\"#%D1%81%D0%BB%D0%BE%D0%B8\" aria-label=\"слои permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>СЛОИ</h1>\n<h2 id=\"entities\" style=\"position:relative;\"><a href=\"#entities\" aria-label=\"entities permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ENTITIES</h2>\n<p>Entities содержат бизнес-логику используемую во всем приложении. Entities может быть объектом с методами или может быть просто набором структур данных и функций. Не имеет значения, в каком виде представлена Entity, пока она может быть использована различными модулями проекта.</p>\n<p>Если вы разрабатываете одно небольшое приложение, то Entities являются бизнес-объектами этого приложения. Они содержат в себе основную высокоуровневую логику. При каких-либо внешних изменениях, Entities - последнее, чего могут коснуться эти изменения. Например, изменения навигации или настроек безопасности никак не должны повлиять на них. Ни одно изменение модуля приложения не должно затронуть Entities.</p>\n<h2 id=\"use-cases\" style=\"position:relative;\"><a href=\"#use-cases\" aria-label=\"use cases permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>USE CASES</h2>\n<p>Код этого уровня содержит бизнес-правила конкретного приложения. Он содержит и реализовывает все возможные варианты использования системы. Use cases отвечают за поток данных в/из Entities и используют Entities для выполнения необходимых действий.</p>\n<p>Изменения этого слоя не должны влиять на Entities. Также, изменения внених слоев, таких как, Базы Данных, никак не должны влиять на Use Cases.</p>\n<p>Однако, код Use Cases будет изменен при изменении логики работы приложения. Если изменится какой-либо случай использования приложения, эти изменения будут реализованы в этом слое.</p>\n<h2 id=\"interface-adapters\" style=\"position:relative;\"><a href=\"#interface-adapters\" aria-label=\"interface adapters permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>INTERFACE ADAPTERS</h2>\n<p>Этот слой представляет из себя набор адаптеров, которые конвертируют данные, из формата, который удобен для использования в Entities и Use Cases в формат, более удобный для внешних сервисов, таких как Базы Данных или Web-сервисы. Например, в этом слое должен содержаться полностью весь GUI MVC. Контроллеры, Презентеры, Представления, все находится здесь. Модели, пожалуй, это всего лишь структуры данных, которые передаются из Контролеров в Use Cases и обратно из Use Cases в Представления и Презентеры.</p>\n<p>По аналогии, в этом слое данные должны быть конвертированы из формата, удобного для использования в Entities и Use Cases в форматы, удобные для хранения, например в Базах Данных. Код изнутри этого слоя не должен что-либо знать о Базах Данных. Если используется SQL база данных, то все SQL запросы должны быть обработаны именно на уровне этого слоя.</p>\n<p>Также, в этом слое должны находиться все другие возможные адаптеры, конвертирующие данные в формат удобный для использования в любых других внешних сервисах и наоборот в форматы, используемые в Entities и Use Cases.</p>\n<h2 id=\"frameworks-and-drivers\" style=\"position:relative;\"><a href=\"#frameworks-and-drivers\" aria-label=\"frameworks and drivers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>FRAMEWORKS AND DRIVERS</h2>\n<p>Самый дальний, внешний слой, состоящий из фреймворков и различных инструментов, таких как Базы Данных, Web-сервисы. В общем, вы не должны писать здесь много кода, кроме связующего кода с внутренними слоями.</p>\n<p>На этом слое реализованы все детали. Связь с Web-сервисами - это детали. Базы Данных - это детали. Мы оставили все это снаружи, чтобы не причинять вреда внутренним слоям.</p>\n<h1 id=\"и-это-все\" style=\"position:relative;\"><a href=\"#%D0%B8-%D1%8D%D1%82%D0%BE-%D0%B2%D1%81%D0%B5\" aria-label=\"и это все permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>И ЭТО ВСЕ?</h1>\n<p>Нет. Эти слои - схематичны. Вероятно, вам понадобится что-либо, не вписывающие в эти четыре слоя. Нет такого правила, которое говорит, что вы должны использовать только эти четыре слоя. Однако, Правило Зависимостей (Dependency Rule) должно выполняться всегда. Исходный код на любом слое должны ссылаться на внутренний. При движение вовнутрь, уровень абстракции увеличивается. Внешний слой - низкоуровневая реализация деталей. Чем дальше вы продвигаетесь вовнутрь, тем более абстрактным становится код и более высокоуровневую логику реализовывает. Самый внутренний слой отвечает за общую логику.</p>\n<h1 id=\"пересечение-границ-слоев\" style=\"position:relative;\"><a href=\"#%D0%BF%D0%B5%D1%80%D0%B5%D1%81%D0%B5%D1%87%D0%B5%D0%BD%D0%B8%D0%B5-%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%86-%D1%81%D0%BB%D0%BE%D0%B5%D0%B2\" aria-label=\"пересечение границ слоев permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ПЕРЕСЕЧЕНИЕ ГРАНИЦ СЛОЕВ</h1>\n<p>На диаграмме справа-снизу представлено, как можно пересечь границы слоя. Там показано, как Контроллеры и Представления общаются с Use Cases. Обратите внимание на поток управления. Он начинается в Контроллере, проходит через Use Case и заканчивается в Презентере. Также обратите внимание на зависимости исходного кода. Каждый из них указывает на Use Case.</p>\n<p>Обычно мы решает это противоречие при помощи <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%B8%D0%BD%D1%86%D0%B8%D0%BF_%D0%B8%D0%BD%D0%B2%D0%B5%D1%80%D1%81%D0%B8%D0%B8_%D0%B7%D0%B0%D0%B2%D0%B8%D1%81%D0%B8%D0%BC%D0%BE%D1%81%D1%82%D0%B5%D0%B9\">Принципа Инверсии Зависимостей</a>. В таких языках, как Java, мы должны настроить интерфейсы и наследования, так, чтобы зависимости исходного кода были противоположны потоку управления в точках пересечения границ слоев.</p>\n<p>Допустим, Use Case должен обратиться к Презентеру. Это обращение не должно быть реализовано напрямую, чтобы не нарушать Правило Зависимостей (Dependency Rule): внутренние слои не должны знать о реализации внешних. В таком случае, Use Case обратится к интерфейсу (изображено на диаграмме как Use Case Output Port) внутреннего слоя, а Презентер из внешнего слоя должен его реализовать.</p>\n<p>Подобная техника используется для пересечения остальных границ архитектуры. Мы используем преумещества динамического полиморфизма, чтобы зависимости исходного кода были противоположны потоку управления. Таким образом мы не нарушаем правило зависимостей (Dependency Rule) вне зависимости от направления потока управления.</p>\n<h1 id=\"какие-данные-должны-пересекать-границы\" style=\"position:relative;\"><a href=\"#%D0%BA%D0%B0%D0%BA%D0%B8%D0%B5-%D0%B4%D0%B0%D0%BD%D0%BD%D1%8B%D0%B5-%D0%B4%D0%BE%D0%BB%D0%B6%D0%BD%D1%8B-%D0%BF%D0%B5%D1%80%D0%B5%D1%81%D0%B5%D0%BA%D0%B0%D1%82%D1%8C-%D0%B3%D1%80%D0%B0%D0%BD%D0%B8%D1%86%D1%8B\" aria-label=\"какие данные должны пересекать границы permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>КАКИЕ ДАННЫЕ ДОЛЖНЫ ПЕРЕСЕКАТЬ ГРАНИЦЫ</h1>\n<p>Обычно, данные, пересекаемые границы, являются обычными структурами данных. Вы можете пользоваться основными структурами или Data Transfer объектами. Или данные могут быть аргументами вызова функций. Или вообще можно представлять данные в виде hashmap или засунуть в объект. Важно, чтобы данные, пересекаемые границы, были простыми и изолированными. Мы же не хотим читерить и передавать Entities или строки из Базы Данных. Также передаваемые данные не должны иметь какие-либо зависимости и нарушать правило зависимостей (Dependency Rule).</p>\n<p>Например, множество фреймворков возвращает из Базы Данных данные в очень удобном формате. Назовем это RowStructure. Однако нельзя передавать RowStructure через границы слоев. Это нарушает правило зависимостей (Dependency Rule) потому что таким образом мы можем дать внутреннему слою информацию о реализации и структуре используемых данных внешнего.</p>\n<p>В общем, при передаче данных через границу, они должны быть представлены в формате, наиболее удобном для использования во внутреннем слое.</p>\n<h1 id=\"заключение\" style=\"position:relative;\"><a href=\"#%D0%B7%D0%B0%D0%BA%D0%BB%D1%8E%D1%87%D0%B5%D0%BD%D0%B8%D0%B5\" aria-label=\"заключение permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ЗАКЛЮЧЕНИЕ</h1>\n<p>Следовать этим простым правилам не так сложно, однако это сохранит вас от головной боли в будущем. Разделением кода на слои и следованием правилу зависимостей (Dependency Rule) можно создать систему, которая будет действительно тестируемой со всеми вытекающими из этого плюсами. Если какая-то внешняя часть системы устареет (например, База Данных или фреймворк), заменить его будет достаточно легко без каких-либо проблем.</p>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://habr.com/company/mobileup/blog/335382/\">Заблуждения Clean Architecture</a></li>\n<li><a href=\"https://habr.com/post/233747/\">Луковая архитектура</a></li>\n<li><a href=\"https://www.youtube.com/watch?v=lZq8Jlq18Ec\">Часовое видео от Robert Martin о Clean Architecture на английском</a></li>\n</ul>","fields":{"slug":"/posts/the-clean-architecture","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/ddd"]},"frontmatter":{"title":"THE CLEAN ARCHITECTURE","date":"2018-08-15T21:40:00.000Z","tags":["the clean architecture","ddd"],"category":"development","description":"The Clean Architecture описывает основные общие правила построения архитектуры приложения. Как сделать разработку тестируемой, удобной, понятной, а части системы взаимозаменяемыми.","priority":5}}},{"node":{"html":"<h3 id=\"bounded-context-это-основной-паттерн-в-domain-driven-design-это-центр-проектирования-архитектуры-в-ddd-предназначенный-для-работы-с-объемными-моделями-и-командами-ddd-работает-с-моделями-разделяя-их-на-разные-bounded-context-и-явно-определяя-взаимодействие-между-ними\" style=\"position:relative;\"><a href=\"#bounded-context-%D1%8D%D1%82%D0%BE-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D0%BE%D0%B9-%D0%BF%D0%B0%D1%82%D1%82%D0%B5%D1%80%D0%BD-%D0%B2-domain-driven-design-%D1%8D%D1%82%D0%BE-%D1%86%D0%B5%D0%BD%D1%82%D1%80-%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F-%D0%B0%D1%80%D1%85%D0%B8%D1%82%D0%B5%D0%BA%D1%82%D1%83%D1%80%D1%8B-%D0%B2-ddd-%D0%BF%D1%80%D0%B5%D0%B4%D0%BD%D0%B0%D0%B7%D0%BD%D0%B0%D1%87%D0%B5%D0%BD%D0%BD%D1%8B%D0%B9-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-%D0%BE%D0%B1%D1%8A%D0%B5%D0%BC%D0%BD%D1%8B%D0%BC%D0%B8-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8F%D0%BC%D0%B8-%D0%B8-%D0%BA%D0%BE%D0%BC%D0%B0%D0%BD%D0%B4%D0%B0%D0%BC%D0%B8-ddd-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82-%D1%81-%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D1%8F%D0%BC%D0%B8-%D1%80%D0%B0%D0%B7%D0%B4%D0%B5%D0%BB%D1%8F%D1%8F-%D0%B8%D1%85-%D0%BD%D0%B0-%D1%80%D0%B0%D0%B7%D0%BD%D1%8B%D0%B5-bounded-context-%D0%B8-%D1%8F%D0%B2%D0%BD%D0%BE-%D0%BE%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D1%8F%D1%8F-%D0%B2%D0%B7%D0%B0%D0%B8%D0%BC%D0%BE%D0%B4%D0%B5%D0%B9%D1%81%D1%82%D0%B2%D0%B8%D0%B5-%D0%BC%D0%B5%D0%B6%D0%B4%D1%83-%D0%BD%D0%B8%D0%BC%D0%B8\" aria-label=\"bounded context это основной паттерн в domain driven design это центр проектирования архитектуры в ddd предназначенный для работы с объемными моделями и командами ddd работает с моделями разделяя их на разные bounded context и явно определяя взаимодействие между ними permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Bounded Context это основной паттерн в <a href=\"https://ru.wikipedia.org/wiki/%D0%9F%D1%80%D0%BE%D0%B1%D0%BB%D0%B5%D0%BC%D0%BD%D0%BE-%D0%BE%D1%80%D0%B8%D0%B5%D0%BD%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D0%BE%D0%B5_%D0%BF%D1%80%D0%BE%D0%B5%D0%BA%D1%82%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D0%B5\">Domain-Driven Design</a>. Это центр проектирования архитектуры в DDD, предназначенный для работы с объемными моделями и командами. DDD работает с моделями разделяя их на разные Bounded Context и явно определяя взаимодействие между ними.</h3>\n<hr>\n<p><em>Перевод статьи <a href=\"https://martinfowler.com/bliki/BoundedContext.html\">Bounded Context</a> от <a href=\"https://martinfowler.com/\">Martin Fowler</a> 15 февраля 2015.</em></p>\n<p><img src=\"/media/2018-08-15-bounded-context/01.png\" alt=\"Bounded Context\" title=\"Bounded Context\"></p>\n<p>DDD подразумевает разработку приложения на основе моделирования определенной предметной области. Модель выступает в качестве общего языка (<a href=\"https://martinfowler.com/bliki/UbiquitousLanguage.html\">Ubiquitous Language</a>) для коммуникации между группами разработчиков и специалистами предметной области. Она также выступает как фундамент для разработки самого приложения - как оно разбивается на объекты и функции. Чтобы быть эффективной, модель должна быть унифицирована, то есть внутреннее согласованной без каких-либо противоречий.</p>\n<p>Когда вы пытаетесь моделировать обширную область, становится все сложнее конструировать унифицированную модель. Разные люди используют разные термины в разных подразделениях компании. Из-за этого быстро возникает путаница в модели. Обычно путаница появляется на основных концепциях предметной области.</p>\n<p>В начале своей карьеры я работал службе энергоснабжения. Там слово “meter” означало разные вещи в разных подразделениях компании: оно означало соединение между энергосистемой и потребителем, саму энергосистему и электросчетчик. Такая многозначность должна быть решена во время переговоров, однако не в точном мире компьютеров. Снова и снова я наблюдал подобную путаницу между терминами “пользователь” и “продукт”.</p>\n<p>В те молодые годы нам посоветовали построить единую унифицированную модель всего бизнеса, но тогда мы поняли, что, как описано в DDD, “полная унификация модели предметной области для обширных систем невозможна или экономически неэффективна”. Вместо это DDD предлагает разделение всей системы на Bounded Context каждая из которых может иметь свою унифицированную модель, то есть, проектирование <a href=\"https://martinfowler.com/bliki/MultipleCanonicalModels.html\">Multiple Canonical Models</a>.</p>\n<p>Bounded Contexts могут содержать как несвязанные понятия (например, заявка от клиента может существовать только в контексте поддержки пользователей), так и общие (например, продукты и пользователи). Разные контексты могут иметь абсолютно разные понятия, с механизмами сопоставления между ними для интеграции. В DDD существует несколько паттернов для обеспечения связи между контекстами.</p>\n<p>Границы между контекстами определяются различными факторами. Обычно основной фактор - человеческая культура. Если вы используете Ubiquitous Language, вам придется изменить модель, в случае, если изменится человеческий язык. Границы между контекстами задаются в зависимости от того, как мы представляем модель.</p>\n<p>Архитектура DDD описывает различные пути отношения между Bounded Context. Однако, обычно это происходит при помощи описания соответствия контекстов.</p>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://habr.com/post/232881/\">Ubiquitous Language и Bounded Context в DDD</a></li>\n<li><a href=\"http://yapro.ru/web-master/interesnoe/chto-takoe-bounded-contexts-i-context-maps-v-ddd.html\">Что такое Bounded Contexts и Context Maps в DDD</a></li>\n<li><a href=\"http://mtsepkov.org/%D0%9E%D1%82_%D0%BC%D0%BE%D0%BD%D0%BE%D0%BB%D0%B8%D1%82%D0%BD%D1%8B%D1%85_%D0%BC%D0%BE%D0%B4%D0%B5%D0%BB%D0%B5%D0%B9_%D0%BF%D1%80%D0%B5%D0%B4%D0%BC%D0%B5%D1%82%D0%BD%D0%BE%D0%B9_%D0%BE%D0%B1%D0%BB%D0%B0%D1%81%D1%82%D0%B8_-_%D0%BA_%D0%BC%D0%BE%D0%B4%D1%83%D0%BB%D1%8C%D0%BD%D1%8B%D0%BC_(%D0%9C%D0%B0%D0%BA%D1%81%D0%B8%D0%BC_%D0%A6%D0%B5%D0%BF%D0%BA%D0%BE%D0%B2_%D0%BD%D0%B0_WIAD-2017)\">От монолитных моделей предметной области - к модульным (Максим Цепков на WIAD-2017)</a></li>\n</ul>","fields":{"slug":"/posts/bounded-context","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/ddd"]},"frontmatter":{"title":"BOUNDED CONTEXT","date":"2018-08-15T21:35:00.000Z","tags":["the clean architecture","ddd"],"category":"development","description":"Bounded Context это основной паттерн в Domain-Driven Design. Это центр проектирования архитектуры в DDD, предназначенный для работы с объемными моделями и командами. DDD работает с моделями разделяя их на разные Bounded Context и явно определяя взаимодействие между ними.","priority":0}}}]}},"pageContext":{"allCategories":[{"fieldValue":"development","totalCount":3,"categoryColor":"pink-600"},{"fieldValue":"recipes","totalCount":5,"categoryColor":"green-600"}],"currentPage":0,"postsLimit":20,"postsOffset":0,"prevPagePath":"/","nextPagePath":"/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["2052939023","251939775","401334301"]}