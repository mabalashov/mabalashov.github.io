{"componentChunkName":"component---src-templates-post-template-js","path":"/blog/post/accelerate-centrifugo","result":{"data":{"markdownRemark":{"id":"d1186a9c-af1d-507c-8dd9-417ba7c11980","html":"<h4 id=\"мы-используем-centrifugo-для-отправки-огромного-количества-сообщений-в-клиентские-сокеты-после-некоторого-изучения-внутренностей-центрифуги-мы-нашли-что-основные-способы-отправки-сообщений-из-сервисов-в-саму-центрифугу-являются-http-api-запрос-или-grpc-который-работает-поверх-того-же-http\" style=\"position:relative;\"><a href=\"#%D0%BC%D1%8B-%D0%B8%D1%81%D0%BF%D0%BE%D0%BB%D1%8C%D0%B7%D1%83%D0%B5%D0%BC-centrifugo-%D0%B4%D0%BB%D1%8F-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D0%BE%D0%B3%D1%80%D0%BE%D0%BC%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BA%D0%BE%D0%BB%D0%B8%D1%87%D0%B5%D1%81%D1%82%D0%B2%D0%B0-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B2-%D0%BA%D0%BB%D0%B8%D0%B5%D0%BD%D1%82%D1%81%D0%BA%D0%B8%D0%B5-%D1%81%D0%BE%D0%BA%D0%B5%D1%82%D1%8B-%D0%BF%D0%BE%D1%81%D0%BB%D0%B5-%D0%BD%D0%B5%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D0%BE%D0%B3%D0%BE-%D0%B8%D0%B7%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D1%8F-%D0%B2%D0%BD%D1%83%D1%82%D1%80%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D0%B5%D0%B9-%D1%86%D0%B5%D0%BD%D1%82%D1%80%D0%B8%D1%84%D1%83%D0%B3%D0%B8-%D0%BC%D1%8B-%D0%BD%D0%B0%D1%88%D0%BB%D0%B8-%D1%87%D1%82%D0%BE-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%BD%D1%8B%D0%B5-%D1%81%D0%BF%D0%BE%D1%81%D0%BE%D0%B1%D1%8B-%D0%BE%D1%82%D0%BF%D1%80%D0%B0%D0%B2%D0%BA%D0%B8-%D1%81%D0%BE%D0%BE%D0%B1%D1%89%D0%B5%D0%BD%D0%B8%D0%B9-%D0%B8%D0%B7-%D1%81%D0%B5%D1%80%D0%B2%D0%B8%D1%81%D0%BE%D0%B2-%D0%B2-%D1%81%D0%B0%D0%BC%D1%83-%D1%86%D0%B5%D0%BD%D1%82%D1%80%D0%B8%D1%84%D1%83%D0%B3%D1%83-%D1%8F%D0%B2%D0%BB%D1%8F%D1%8E%D1%82%D1%81%D1%8F-http-api-%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81-%D0%B8%D0%BB%D0%B8-grpc-%D0%BA%D0%BE%D1%82%D0%BE%D1%80%D1%8B%D0%B9-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D0%B0%D0%B5%D1%82-%D0%BF%D0%BE%D0%B2%D0%B5%D1%80%D1%85-%D1%82%D0%BE%D0%B3%D0%BE-%D0%B6%D0%B5-http\" aria-label=\"мы используем centrifugo для отправки огромного количества сообщений в клиентские сокеты после некоторого изучения внутренностей центрифуги мы нашли что основные способы отправки сообщений из сервисов в саму центрифугу являются http api запрос или grpc который работает поверх того же http permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Мы используем <a href=\"https://centrifugal.github.io/centrifugo/\">centrifugo</a> для отправки огромного количества сообщений в клиентские сокеты. После некоторого изучения внутренностей центрифуги мы нашли, что основные способы отправки сообщений из сервисов в саму центрифугу являются http api запрос или grpc, который работает поверх того же http.</h4>\n<hr>\n<p><img src=\"/media/2022-02-19-accelerate-centrifugo/centrifugo.svg\" alt=\"Centrifugo\" title=\"Centrifugo\"></p>\n<p><em>Данная заметка написана про Centrifugo v2, однако на данный момент уже <a href=\"https://habr.com/ru/post/576608/\">выпущена v3</a></em></p>\n<p>Тогда возникла идея провести небольшой реверс-инжиниринг и разобраться как <a href=\"https://centrifugal.github.io/centrifugo/server/engines/\">работают Engine</a></p>\n<p>После изучения <a href=\"https://github.com/centrifugal/centrifugo\">исходного кода</a> и некоторых <a href=\"https://medium.com/@fzambia/how-redis-suits-centrifugo-1cff01c47f97\">статей</a> мы поняли, что мы можем настроить Центрифугу работать с Redis и прокидывать сообщения в Engine напрямую</p>\n<p>Поскольку основной наш язык - PHP, пришлось потратить немного больше времени.\nCentrifugo написана на go и внутри использует protobuf.</p>\n<p>Поэтому, в первую очередь необходимо <a href=\"https://github.com/centrifugal/protocol/blob/master/definitions/client.proto\">стянуть дефинишены</a> внутренних объектов</p>\n<p>Далее подготавливаем Docker образ для компилирования PHP protobuf-классов для работы нашего клиента с внутренними объектами Centrifugo.</p>\n<p>Выглядит примерно так:</p>\n<pre><code class=\"language-dockerfile\">FROM php:8.0.3-cli-buster\n\nARG PROTOBUF_VERSION=3.15.6\n\nRUN apt-get update \\\n&#x26;&#x26; apt-get install -y git bash protobuf-compiler \\\n&#x26;&#x26; protoc --version \\\n&#x26;&#x26; pecl install protobuf-$PROTOBUF_VERSION \\\n&#x26;&#x26; docker-php-ext-enable protobuf\n\nCOPY ./docker/compile/entrypoint.sh /entrypoint.sh\nRUN chmod +x /entrypoint.sh\n\nCMD [\"/entrypoint.sh\"]\n</code></pre>\n<p>И сам entrypoint.sh (не забываем подставить нужные namespac’ы):</p>\n<pre><code class=\"language-shell\">#!/bin/sh\n\nNAMESPACE='MySuperNamespace\\\\\\\\CentrifugoClient\\\\\\\\Protobuf\\\\\\\\Messages'\nMETADATA_NAMESPACE='MySuperNamespace\\\\\\\\CentrifugoClient\\\\\\\\Protobuf\\\\\\\\Metadata'\n\nmkdir -p /proto\nrm -rf /proto/*\ncd /proto\ncp /input.proto /proto/input.proto\nsed -r -i \"/^package.*/a option php_namespace = \\\"$NAMESPACE\\\";\" ./input.proto\nsed -r -i \"/^package.*/a option php_metadata_namespace = \\\"$METADATA_NAMESPACE\\\";\" ./input.proto\n#cat ./input.proto\nrm -rf /output/*\n\nprotoc --proto_path=/proto --php_out=/output /proto/input.proto\n</code></pre>\n<p>На выходе у нас будет набор нужных PHP классов.</p>\n<p>Далее, чтобы отправить сообщение в Центрифугу, необходимо воспользоваться <a href=\"https://redis.io/topics/pubsub\">Redis PUB/SUB</a> и вызывать метод <a href=\"https://redis.io/commands/publish\">PUBLISH</a> с сериализированными в protobuf данными. Имя канала должно быть в формате <code>centrifugo.client.&#x3C;имя_канала_центрифуги></code>. Воспользуемся следующим кодом:</p>\n<pre><code class=\"language-php\">use MySuperNamespace\\CentrifugoClient\\Protobuf\\Messages\\Publication;\nuse MySuperNamespace\\CentrifugoClient\\Protobuf\\Messages\\Push;\nuse MySuperNamespace\\CentrifugoClient\\Protobuf\\Messages\\PushType;\n...\n$channel = '&#x3C;в какой канал отправляем>';\n$message = '&#x3C;массив данных для отправки>';\n$client = new \\Redis(...);\n\n$data = new Publication();\n$data->setData(json_encode($message));\n\n$push = new Push();\n$push->setData($data->serializeToString());\n$push->setChannel($channel);\n$push->setType(PushType::PUSH_TYPE_PUBLICATION);\n\n$client->publish('centrifugo.client.' . $channel, $push->serializeToString());\n</code></pre>\n<p>Вывод: мы устранили бутылочное горлышко в виде ограничений транспорта коммуникаций с Центрифугой, однако, используя данный способ мы должны помнить, что мы используем недокументированные возможности, а значит никто не гарантирует стабильность работы и обратную совместимость. Чтобы обновить версию Центрифуги, необходимо будет обновить как минимум дескрипешены protobuf’а</p>","fields":{"slug":"/posts/accelerate-centrifugo","tagSlugs":["/tag/centrifugo","/tag/protobuf","/tag/websockets","/tag/highload"],"categorySlug":"/category/recipes"},"frontmatter":{"date":"2022-02-19T21:35:00.000Z","description":"Мы используем centrifugo для отправки огромного количества сообщений в клиентские сокеты После некоторого изучения внутренностей центрифуги мы нашли, что основные способы отправки сообщений из сервисов в саму центрифугу являются http api запрос или grpc, который работает поверх того же http.","category":"recipes","tags":["centrifugo","protobuf","websockets","highload"],"title":"Ускоряем отправку сообщений через Centrifugo v2 через прямое обращение к Engine"}}},"pageContext":{"slug":"/posts/accelerate-centrifugo","allCategories":[{"fieldValue":"debug","totalCount":2,"categoryColor":"pink-600"},{"fieldValue":"development","totalCount":3,"categoryColor":"green-600"},{"fieldValue":"recipes","totalCount":9,"categoryColor":"indigo-600"}]}},"staticQueryHashes":["2052939023","251939775","401334301"]}