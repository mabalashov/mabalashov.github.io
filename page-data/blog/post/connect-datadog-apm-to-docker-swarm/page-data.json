{"componentChunkName":"component---src-templates-post-template-js","path":"/blog/post/connect-datadog-apm-to-docker-swarm","result":{"data":{"markdownRemark":{"id":"62194ead-7248-5dc8-9fab-4e20235ae177","html":"<h4 id=\"серия-статей-основанных-на-собственном-опыте-об-особенностях-настройки-docker-swarm-для-работы-с-datadog\" style=\"position:relative;\"><a href=\"#%D1%81%D0%B5%D1%80%D0%B8%D1%8F-%D1%81%D1%82%D0%B0%D1%82%D0%B5%D0%B9-%D0%BE%D1%81%D0%BD%D0%BE%D0%B2%D0%B0%D0%BD%D0%BD%D1%8B%D1%85-%D0%BD%D0%B0-%D1%81%D0%BE%D0%B1%D1%81%D1%82%D0%B2%D0%B5%D0%BD%D0%BD%D0%BE%D0%BC-%D0%BE%D0%BF%D1%8B%D1%82%D0%B5-%D0%BE%D0%B1-%D0%BE%D1%81%D0%BE%D0%B1%D0%B5%D0%BD%D0%BD%D0%BE%D1%81%D1%82%D1%8F%D1%85-%D0%BD%D0%B0%D1%81%D1%82%D1%80%D0%BE%D0%B9%D0%BA%D0%B8-docker-swarm-%D0%B4%D0%BB%D1%8F-%D1%80%D0%B0%D0%B1%D0%BE%D1%82%D1%8B-%D1%81-datadog\" aria-label=\"серия статей основанных на собственном опыте об особенностях настройки docker swarm для работы с datadog permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog.</h4>\n<hr>\n<p>Серия статей</p>\n<ol>\n<li><a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере интеграции Datadog</a></li>\n<li><strong>Настраиваем Datadog APM в сети Docker Swarm</strong> </li>\n<li><a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Собираем метрики php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></li>\n<li><a href=\"/posts/datadog-monitor-slack-notifications\">Мониторим метрики при помощи Datadog Monitor и отправляем нотификации в Slack при возникновении проблем</a></li>\n</ol>\n<p>В предыдущей статье мы создали сеть для внутренних сервисов в Docker Swarm, теперь пора использовать её для подключения\nDatadog APM </p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog.png\" alt=\"Datadog\" title=\"Datadog\"></p>\n<p>Настроим Datadog, чтобы он собирал traces с наших сервисов.\nПрезентацию возможностей этого инструмента можно найти <a href=\"https://docs.datadoghq.com/tracing/\">здесь</a></p>\n<p>Краткое описание настройки APM можно найти в Datadog: APM > Setup &#x26; Configuration > Service Setup</p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog-setup-apm.png\" alt=\"Datadog Setup APM\" title=\"Datadog Setup APM\"></p>\n<h1 id=\"datadog-agent\" style=\"position:relative;\"><a href=\"#datadog-agent\" aria-label=\"datadog agent permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog Agent</h1>\n<h2 id=\"datadog-agent-image\" style=\"position:relative;\"><a href=\"#datadog-agent-image\" aria-label=\"datadog agent image permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog agent image</h2>\n<p>В первую очередь добавим контейнер с datadog-agent в наши сервисы. Пропишем в <em>docker-compose.yaml</em>:</p>\n<pre><code>services:\n  ...\n  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n</code></pre>\n<p>Я зафиксировал определенную версию образа (<code>6.10.2</code>), но в принципе, можно указать, чтобы всегда брался последний образ: <code>datadog/agent:latest</code></p>\n<p>Открывать порт <em>8126</em>, как описано в документации необязательно, потому что все сервисы и <em>docker-agent</em> будут в одной сети. </p>\n<p>Однако необходимо указать <code>DD_APM_NON_LOCAL_TRAFFIC=true</code>, чтобы разрешить трейсинг из\n<a href=\"https://docs.datadoghq.com/agent/docker/apm/?tab=standard#tracing-from-other-containers\">других контейнеров</a></p>\n<p><a href=\"https://docs.datadoghq.com/agent/docker/apm/?tab=standard#docker-apm-agent-environment-variables\">Здесь</a>\nможно найти список всех возможных переменных окружения</p>\n<p>В <code>DD_TAGS='env:'</code> для удобства стоит указать какой-либо идентификатор приложения и, если мы используем\n<em>datadog</em> для dev-окружения, то можно добавить для удобства имя тестируемой ветки.</p>\n<p>Не забываем указать, чтобы агент использовал сеть <code>datadog-agent</code>, которую мы создали на предыдущих шагах</p>\n<h2 id=\"datadog-agent-log-collector\" style=\"position:relative;\"><a href=\"#datadog-agent-log-collector\" aria-label=\"datadog agent log collector permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog agent log collector</h2>\n<p>Если мы хотим, чтобы <em>datadog</em> собирал логи сервисов, стоит привести описание к следующему виду:</p>\n<pre><code>services:\n  ...\n  agent:\n    image: \"datadog/agent:6.10.2\"\n    environment:\n      - DD_API_KEY=${DD_API_KEY}\n      - DD_APM_ENABLED=true\n      - DD_APM_NON_LOCAL_TRAFFIC=true\n      - DD_TAGS='env:your-tags'\n      - DD_LOGS_ENABLED=true\n      - DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL=true\n    volumes:\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - /proc/:/host/proc/:ro\n      - /sys/fs/cgroup/:/host/sys/fs/cgroup:ro\n    networks:\n      - datadog-agent\n    labels:\n      com.datadoghq.ad.logs: '[{\"source\": \"datadog-agent\", \"service\": \"agent\"}]'\n</code></pre>\n<p>Для этого мы добавили две переменные окружения:</p>\n<ul>\n<li><code>DD_LOGS_ENABLED</code></li>\n<li><code>DD_LOGS_CONFIG_CONTAINER_COLLECT_ALL</code></li>\n</ul>\n<p>которые включают сбор логов и просят <em>datadog</em> автоматически определять запущенные сервисы в контейнерах.</p>\n<p>Также, при помощи директивы <code>com.datadoghq.ad.logs</code>, можно вручную указать правила для сборщика логов (но это не обязательно)</p>\n<p>Более подробно о настройке <em>datadog log collector</em> можно найти в <a href=\"https://docs.datadoghq.com/agent/docker/log/?tab=containerinstallation\">официальной документации</a></p>\n<h1 id=\"php-tracer\" style=\"position:relative;\"><a href=\"#php-tracer\" aria-label=\"php tracer permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>PHP tracer</h1>\n<p>Чтобы наши контейнеры отправляли данные в <em>datadog-agent</em>, необходимо установить соответствующий трейсер.\nВ нашем примере, мы используем приложение на PHP, потому рассмотрим именно PHP-tracer. </p>\n<h2 id=\"installation\" style=\"position:relative;\"><a href=\"#installation\" aria-label=\"installation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installation</h2>\n<p>Шаги установки подробно описаны в официальной <a href=\"https://docs.datadoghq.com/tracing/setup/php/#install-the-extension\">документации</a>.\nТам же можно найти <a href=\"https://github.com/DataDog/dd-trace-php/releases/latest\">ссылки</a> для скачивания подходящей версии php tracer.</p>\n<p>В моём dockerfile установка php tracer выглядит так:</p>\n<pre><code>FROM php:7.4-fpm-alpine\n\n...\n\nRUN curl -L -o /tmp/datadog-php-tracer.apk https://github.com/DataDog/dd-trace-php/releases/download/0.47.1/datadog-php-tracer_0.47.1_noarch.apk \\\n    &#x26;&#x26; apk add /tmp/datadog-php-tracer.apk --allow-untrusted \\\n    &#x26;&#x26; rm -r /tmp/datadog-php-tracer.apk\n</code></pre>\n<p>Но у вас может немного отличаться в зависимости от образа, на основе которого вы собираете PHP-контейнер.</p>\n<p>Например, если вы используете ubuntu, а не alpine, то стоит скачивать и устанавливать <code>.deb</code> пакет</p>\n<h2 id=\"configuration\" style=\"position:relative;\"><a href=\"#configuration\" aria-label=\"configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuration</h2>\n<p>Обновим описание сервиса php в нашем <em>docker-compose.yaml</em>:</p>\n<pre><code>services:\n...\n  php-fpm:\n    depends_on:\n      - agent\n    networks:\n      ...\n      - datadog-agent\n    environment:\n        DD_AGENT_HOST: agent\n        DD_TRACE_ANALYTICS_ENABLED: true\n        DD_TRACE_SYMFONY_ANALYTICS_ENABLED: true\n        DD_TRACE_PDO_ANALYTICS_ENABLED: true\n        DD_TRACE_PREDIS_ANALYTICS_ENABLED: true\n        DD_TRACE_GUZZLE_ANALYTICS_ENABLED: true\n    ...\n</code></pre>\n<p>Здесь мы указали, что:</p>\n<ul>\n<li>сервис будет зависеть от datadog-agent (agent - имя сервиса, которое было задано для datadog-agent в\ndocker-compose.yaml), чтобы удостовериться, что datadog-agent был запущен раньше него</li>\n<li>сервис будет использовать сеть datadog-agent, которую мы создали на предыдущих шагах</li>\n<li><code>DD_AGENT_HOST</code> - указали хост, по которому можно найти datadog-agent в нашей сети. Как было написано ранее, он\nлибо будет совпадать с именем сервиса, либо будет содержать в себе также имя стека, в зависимости от способа запуска</li>\n<li><code>DD_TRACE_*</code> - указали, что именно мы хотим трассировать</li>\n</ul>\n<p>Полный список доступных переменных окружения для трейсера можно найти <a href=\"https://docs.datadoghq.com/tracing/setup/php/#environment-variable-configuration\">здесь</a></p>\n<h2 id=\"troubleshooting\" style=\"position:relative;\"><a href=\"#troubleshooting\" aria-label=\"troubleshooting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Troubleshooting</h2>\n<p>Проверим, что трейсер запустился</p>\n<p>Зайдем в контейнер, для которого мы настраивали трейсер (пусть будет <em>php-fpm</em>)</p>\n<pre><code>docker ps | grep php-fpm\ndocker exec -it &#x3C;CONTAINER_ID> /bin/bash\n</code></pre>\n<p>И проверим, состояние РНР трейсера:</p>\n<pre><code>php --ri=ddtrace\n</code></pre>\n<p>Если трейсер установлен - увидим его конфигурацию. Что-то вроде:</p>\n<pre><code>Datadog PHP tracer extension\nFor help, check out the documentation at https://docs.datadoghq.com/tracing/languages/php/\n(c) Datadog 2020\n\nDatadog tracing support => enabled\nVersion => 1.0.0-nightly\nDATADOG TRACER CONFIGURATION => {\n    \"date\": \"2020-07-01T17:43:54Z\",\n    \"os_name\": \"Linux 49b1cb4bdd12 4.19.76-linuxkit #1 SMP Tue May 26 11:42:35 UTC 2020 x86_64\",\"os_version\":\"4.19.76-linuxkit\",\n    \"version\": \"1.0.0-nightly\",\n    \"lang\": \"php\",\n    \"lang_version\": \"7.4.5\",\n    \"env\": null,\n    \"enabled\": true,\n    \"service\": null,\n    \"enabled_cli\": false,\n    \"agent_url\": \"https://localhost:8126\",\n    \"debug\": false,\n    \"analytics_enabled\": false\n    \"sample_rate\": 1.000000,\n    \"sampling_rules\": null,\n    \"tags\": null,\n    \"service_mapping\": null,\n    \"distributed_tracing_enabled\": true,\n    \"priority_sampling_enabled\": true,\n    \"dd_version\": null,\n    \"architecture\": \"x86_64\",\n    \"sapi\": \"cli\",\n    \"ddtrace.request_init_hook\": null,\n    \"open_basedir_configured\": false,\n    \"uri_fragment_regex\": null,\n    \"uri_mapping_incoming\": null,\n    \"uri_mapping_outgoing\": null,\n    \"auto_flush_enabled\": false,\n    \"generate_root_span\": true,\n    \"http_client_split_by_domain\": false,\n    \"measure_compile_time\": true,\n    \"report_hostname_on_root_span\": false,\n    \"traced_internal_functions\": null,\n    \"auto_prepend_file_configured\": false,\n    \"integrations_disabled\": null,\n    \"enabled_from_env\": true,\n    \"opcache.file_cache\": null,\n    \"agent_error\": \"Couldn't connect to server\",\n    \"ddtrace.request_init_hook_reachable\": false\n}\n\nDiagnostics\nagent_error => Couldn't connect to server\nddtrace.request_init_hook_reachable => false\n\nDirective => Local Value => Master Value\nddtrace.disable => Off => Off\n</code></pre>\n<p>Также, из данной строки можно найти <a href=\"https://docs.datadoghq.com/tracing/troubleshooting/tracer_startup_logs/?tab=php\">startup logs</a>:\nошибка, с которой упал трейсер при попытке запуститься (если таковая была). В данном примере, ошибка: ”<em>Couldn’t connect to server”</em> -\nвероятно, путь до datadog-agent указан неверно или сам агент не запущен, в таком случае, первым делом стоит проверить,\nесть ли связь с datadog-agent’ом.</p>\n<h3 id=\"dd-doctorphp\" style=\"position:relative;\"><a href=\"#dd-doctorphp\" aria-label=\"dd doctorphp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>dd-doctor.php</h3>\n<p>Если на данном этапе проблема не выявлена, можно воспользоваться скриптом dd-doctor: </p>\n<pre><code>php /opt/datadog-php/dd-trace-sources/src/dd-doctor.php\n</code></pre>\n<p>или, если данный файл по каким-то причинам отсутствует:</p>\n<pre><code>curl -L -o /tmp/dd-doctor.php https://raw.githubusercontent.com/DataDog/dd-trace-php/master/src/dd-doctor.php\nphp /tmp/dd-doctor.php\n</code></pre>\n<p>Который проведет диагностику трейсера и выведет основную информацию:</p>\n<pre><code>bash-5.0# \n[2020-08-21T11:17:52+00:00] [ddtrace] [debug] - New span dd-doctor.php  recorded.\n[2020-08-21T11:17:52+00:00] [ddtrace] [debug] - Attempting integrations load\n....\n\nWARNING: Script is running from the CLI SAPI.\n         Please run this script from your web browser.\n\nDataDog trace extension verification\n\n- PHP version and SAPI                               [7.4.9 - cli]\n- ddtrace extension installed                        [OK]\n- ddtrace version (installed)                        [0.47.1]\n- ddtrace version (const)                            [0.47.1]\n- ddtrace version (userland)                         [0.47.1]\n- ddtrace versions in sync                           [OK]\n- dd_trace() function available                      [OK]\n- dd_trace_env_config() function available           [OK]\n- ddtrace.request_init_hook set                      [OK]\n- ddtrace.request_init_hook reachable                [OK]\n- ddtrace.request_init_hook has run                  [OK]\n- 'open_basedir' allows access to '/proc/self/'      [OK]\n- IntegrationsLoader exists                          [OK]\n- Integrations not loaded yet                        [OK]\n- Registering an autoloader...\n- Integrations loaded                                [OK]\n- DDTrace\\Tracer class exists                        [OK]\n- Background sender is enabled?                      [YES]\n- Opcache installed:                                 [YES]\n  > opcache.enable = 1\n  > opcache.enable_cli = 1\n  > opcache.use_cwd = 1\n  > opcache.validate_timestamps = 1\n  > opcache.validate_permission =\n  > opcache.validate_root =\n  > opcache.dups_fix =\n  > opcache.revalidate_path =\n  > opcache.log_verbosity_level = 1\n  > opcache.memory_consumption = 134217728\n  > opcache.interned_strings_buffer = 8\n  > opcache.max_accelerated_files = 10000\n  > opcache.max_wasted_percentage = 0.05\n  > opcache.consistency_checks = 0\n  > opcache.force_restart_timeout = 180\n  > opcache.revalidate_freq = 2\n  > opcache.preferred_memory_model =\n  > opcache.blacklist_filename =\n  > opcache.max_file_size = 0\n  > opcache.error_log =\n  > opcache.protect_memory =\n  > opcache.save_comments = 1\n  > opcache.enable_file_override =\n  > opcache.optimization_level = 2147401727\n  > opcache.lockfile_path = /tmp\n  > opcache.file_cache =\n  > opcache.file_cache_only =\n  > opcache.file_cache_consistency_checks = 1\n  > opcache.file_update_protection = 2\n  > opcache.opt_debug_level = 0\n  > opcache.restrict_api =\n  > opcache.huge_code_pages =\n  > opcache.preload =\n  > opcache.preload_user =\n- Configured Agent host                              [localhost]\n- Configured Agent port                              [8126]\n- Agent can receive traces                           [OK]\n</code></pre>\n<p>Более подробно шаги описаны в <a href=\"https://docs.datadoghq.com/tracing//\">официальной документации</a></p>\n<h2 id=\"datadog-apm\" style=\"position:relative;\"><a href=\"#datadog-apm\" aria-label=\"datadog apm permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Datadog APM</h2>\n<p>Далее проверим результат. Зайдём в Datadog: APM > Services и мы должны увидеть что-то подобное:</p>\n<p><img src=\"/media/2020-08-22-connect-datadog-apm-to-docker-swarm/datadog-apm-interface.png\" alt=\"Datadog APM Interface\" title=\"Datadog APM Interface\"></p>\n<p>Стоит обратить внимание на фильтры; убедиться что выбран верный tag (на данном скриншоте <code>env:feature-datadog</code>),\nкоторый мы указали в описании сервиса <em>datadog-agent</em> в <em>docker-compose.yaml</em> и корректный временной промежуток.</p>\n<hr>\n<p>Предыдущая статья <a href=\"/posts/create-docker-network-for-datadog\">Создаём защищённую сеть в Docker Swarm для внутренних сервисов на примере интеграции Datadog</a></p>\n<p>Следующая статья <a href=\"/posts/docker-swarm-php-fpm-nginx-metrics\">Мониторим состояние php-fpm и nginx при помощи Datadog в сети Docker Swarm</a></p>\n<hr>\n<h1 id=\"интересные-ссылки\" style=\"position:relative;\"><a href=\"#%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D0%B5%D1%81%D0%BD%D1%8B%D0%B5-%D1%81%D1%81%D1%8B%D0%BB%D0%BA%D0%B8\" aria-label=\"интересные ссылки permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>ИНТЕРЕСНЫЕ ССЫЛКИ</h1>\n<ul>\n<li><a href=\"https://habr.com/ru/company/flant/blog/465177/\">Не New Relic’ом одним: взгляд на Datadog и Atatus</a></li>\n</ul>","fields":{"slug":"/posts/connect-datadog-apm-to-docker-swarm","tagSlugs":["/tag/datadog","/tag/devops","/tag/ubuntu","/tag/php","/tag/php-fpm","/tag/nginx","/tag/infrastructure","/tag/docker","/tag/docker swarm"],"categorySlug":"/category/recipes"},"frontmatter":{"date":"2020-08-22T21:45:00.000Z","description":"Серия статей, основанных на собственном опыте, об особенностях настройки Docker Swarm для работы с Datadog. ","category":"recipes","tags":["datadog","devops","ubuntu","php","php-fpm","nginx","infrastructure","docker","docker swarm"],"title":"Настраиваем Datadog APM в сети Docker Swarm"}}},"pageContext":{"slug":"/posts/connect-datadog-apm-to-docker-swarm","allCategories":[{"fieldValue":"development","totalCount":3,"categoryColor":"pink-600"},{"fieldValue":"recipes","totalCount":6,"categoryColor":"green-600"}]}},"staticQueryHashes":["2052939023","251939775","401334301"]}