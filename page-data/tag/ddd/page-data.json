{"componentChunkName":"component---src-templates-tag-template-js","path":"/tag/ddd","result":{"data":{"site":{"siteMetadata":{"title":"Blog by Mikhail Balashov","subtitle":"Research and Development Engineer. Senior PHP / Fullstack Developer"}},"allMarkdownRemark":{"edges":[{"node":{"fields":{"slug":"/posts/implementing-solid-and-onion-architecture-nodejs-typescript-and-inversifyjs","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/onion architecture","/tag/ddd","/tag/solid","/tag/typescript","/tag/inversifyjs","/tag/nodejs","/tag/mvc"]},"frontmatter":{"title":"IMPLEMENTING SOLID AND THE ONION ARCHITECTURE IN NODE.JS WITH TYPESCRIPT AND INVERSIFYJS","date":"2019-01-01T16:28:32.000Z","tags":["the clean architecture","onion architecture","ddd","solid","typescript","inversifyjs","nodejs","mvc"],"category":"development","description":"В данной статье мы рассмотрим принципы Onion Architecture. Onion Architecture это методология построения приложений, построенная на принципах Solid. Она актино использует Инверсию Управления, испытала влияние приципов DDD и немного взяла из функционального программирования."}}},{"node":{"fields":{"slug":"/posts/the-clean-architecture","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/ddd"]},"frontmatter":{"title":"THE CLEAN ARCHITECTURE","date":"2018-08-15T21:40:00.000Z","tags":["the clean architecture","ddd"],"category":"development","description":"The Clean Architecture описывает основные общие правила построения архитектуры приложения. Как сделать разработку тестируемой, удобной, понятной, а части системы взаимозаменяемыми."}}},{"node":{"fields":{"slug":"/posts/bounded-context","categorySlug":"/category/development","tagSlugs":["/tag/the clean architecture","/tag/ddd"]},"frontmatter":{"title":"BOUNDED CONTEXT","date":"2018-08-15T21:35:00.000Z","tags":["the clean architecture","ddd"],"category":"development","description":"Bounded Context это основной паттерн в Domain-Driven Design. Это центр проектирования архитектуры в DDD, предназначенный для работы с объемными моделями и командами. DDD работает с моделями разделяя их на разные Bounded Context и явно определяя взаимодействие между ними."}}}]}},"pageContext":{"tag":"ddd","allCategories":[{"fieldValue":"development","totalCount":3,"categoryColor":"pink-600"},{"fieldValue":"recipes","totalCount":2,"categoryColor":"green-600"}],"currentPage":0,"postsLimit":20,"postsOffset":0,"prevPagePath":"/tag/ddd","nextPagePath":"/tag/ddd/page/1","hasPrevPage":false,"hasNextPage":false}},"staticQueryHashes":["2052939023","251939775","401334301"]}